/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../lib/dist/main.js":
/*!***************************!*\
  !*** ../lib/dist/main.js ***!
  \***************************/
/***/ (() => {

eval("/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./src/core-utils/rect.js\":\n/*!********************************!*\\\n  !*** ./src/core-utils/rect.js ***!\n  \\********************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   area: () => (/* binding */ area),\\n/* harmony export */   clip: () => (/* binding */ clip),\\n/* harmony export */   contains: () => (/* binding */ contains),\\n/* harmony export */   expand: () => (/* binding */ expand),\\n/* harmony export */   subtract: () => (/* binding */ subtract)\\n/* harmony export */ });\\nfunction contains(bounds, rect) {\\n    return (\\n        rect.top >= bounds.top &&\\n        rect.left >= bounds.left &&\\n        rect.top + rect.height <= bounds.top + bounds.height &&\\n        rect.left + rect.width <= bounds.left + bounds.width\\n    );\\n}\\n\\nfunction clip(bounds, rect) {\\n    const newRect = {\\n        top: Math.max(bounds.top, rect.top),\\n        left: Math.max(bounds.left, rect.left),\\n        width: Math.min(bounds.left + bounds.width, rect.left + rect.width) - Math.max(bounds.left, rect.left),\\n        height: Math.min(bounds.top + bounds.height, rect.top + rect.height) - Math.max(bounds.top, rect.top)\\n    };\\n\\n    if (newRect.width >= 0 && newRect.height >= 0)\\n        return newRect;\\n\\n    return {\\n        top: bounds.top,\\n        left: bounds.left,\\n        width: 0,\\n        height: 0\\n    }\\n}\\n\\nfunction expand(rect, margin) {\\n    return {\\n        top: rect.top - margin,\\n        left: rect.left - margin,\\n        width: rect.width + margin * 2,\\n        height: rect.height + margin * 2\\n    };\\n}\\n\\nfunction area(rect) {\\n    return rect.width * rect.height;\\n}\\n\\nfunction subtract(rect, margin) {\\n    return {\\n        top: rect.top,\\n        left: rect.left,\\n        width: Math.max(0, rect.width - margin.left - margin.right),\\n        height: Math.max(0, rect.height - margin.top - margin.bottom)\\n    };\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/core-utils/rect.js?\");\n\n/***/ }),\n\n/***/ \"./src/core-utils/roundToPixels.js\":\n/*!*****************************************!*\\\n  !*** ./src/core-utils/roundToPixels.js ***!\n  \\*****************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ roundToPixels)\\n/* harmony export */ });\\nfunction roundToPixels(value, devicePixelRatio) {\\n    return Math.round(value * devicePixelRatio) / devicePixelRatio;\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/core-utils/roundToPixels.js?\");\n\n/***/ }),\n\n/***/ \"./src/core-utils/stringifyId.js\":\n/*!***************************************!*\\\n  !*** ./src/core-utils/stringifyId.js ***!\n  \\***************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ stringifyId)\\n/* harmony export */ });\\nfunction stringifyObject(object) {\\n    const keys = Object.keys(object).sort();\\n    const stringified = keys.map(key => {\\n        return `${key}:${stringifyId(object[key])}`\\n    });\\n\\n    return `{${stringified.join(',')}}`;\\n}\\n\\nfunction stringifyArray(array) {\\n    const stringified = array.map(stringifyId);\\n\\n    return `[${stringified.join(',')}]`;\\n}\\n\\nfunction stringifyId(key) {\\n    if (key === null)\\n        return 'null'\\n\\n    if (Array.isArray(key))\\n        return stringifyArray(key)\\n\\n    if (typeof key === 'object')\\n        return stringifyObject(key)\\n\\n    return JSON.stringify(key)\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/core-utils/stringifyId.js?\");\n\n/***/ }),\n\n/***/ \"./src/core/render.js\":\n/*!****************************!*\\\n  !*** ./src/core/render.js ***!\n  \\****************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ render)\\n/* harmony export */ });\\n/* harmony import */ var _core_utils_roundToPixels__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core-utils/roundToPixels */ \\\"./src/core-utils/roundToPixels.js\\\");\\n\\n\\nfunction renderSection(context, vertical, horizontal) {\\n    const state = context.state;\\n    const canvas = context.canvases[`${vertical}-${horizontal}`];\\n    const verticalSection = state.sections[vertical];\\n    const horizontalSection = state.sections[horizontal];\\n    const columns = horizontalSection.columns;\\n    const rows = verticalSection.rows;\\n\\n    if (rows.length === 0 || columns.length === 0) {\\n        if (canvas.parentElement)\\n            canvas.parentElement.removeChild(canvas);\\n        return;\\n    }\\n\\n    if (!canvas.parentElement)\\n        context.element.appendChild(canvas);\\n\\n    // Checking how often this is called\\n    // console.log('draw');\\n\\n    // TODO: Borders are still blurry after scrolling at high zoom-out levels\\n\\n    const ctx = canvas.getContext(\\\"2d\\\", { alpha: false });\\n    // TODO: Make that \\\"1\\\" configurable as cell spacing\\n    const scrollRect = state.scrollRect;\\n    const textResolver = state.textResolver;\\n    // TODO: Make sure those formatters are split based on the rule areas\\n    const formatResolver = state.renderFormatResolver;\\n    const borderWidth = state.borderWidth;\\n    const sectionBorders = {\\n        top: verticalSection.showTopBorder,\\n        bottom: verticalSection.showBottomBorder,\\n        left: horizontalSection.showLeftBorder,\\n        right: horizontalSection.showRightBorder\\n    };\\n    const borderOffset = borderWidth / 2;\\n    const rowCount = rows.length;\\n    const columnCount = columns.length;\\n    const horizontalBorderCount = rowCount - 1 + (sectionBorders.top ? 1 : 0) + (sectionBorders.bottom ? 1 : 0);\\n    const verticalBorderCount = columnCount - 1 + (sectionBorders.left ? 1 : 0) + (sectionBorders.right ? 1 : 0);\\n    const rowHeights = rows.map(row => row.height);\\n    const columnWidths = columns.map(column => column.width);\\n    const totalWidth = columnWidths.reduce((a, b) => a + b, 0) + verticalBorderCount * borderWidth;\\n    const totalHeight = rowHeights.reduce((a, b) => a + b, 0) + horizontalBorderCount * borderWidth;\\n\\n    const left = horizontal === 'center'\\n        ? scrollRect.left\\n        : 0;\\n    const top = vertical === 'middle'\\n        ? scrollRect.top\\n        : 0;\\n    const width = horizontal === 'center'\\n        ? scrollRect.width\\n        : horizontalSection.width;\\n    const height = vertical === 'middle'\\n        ? scrollRect.height\\n        : verticalSection.height;\\n\\n    // TODO: Move somewhere else\\n    const horizontalOffsets = columnWidths.reduce((acc, width, index) => {\\n        const prevOffset = acc[index];\\n        const offset = prevOffset + width + borderWidth;\\n        acc.push(offset);\\n        return acc;\\n    }, [sectionBorders.left ? borderWidth : 0]);\\n    const verticalOffsets = rowHeights.reduce((acc, height, index) => {\\n        const prevOffset = acc[index];\\n        const offset = prevOffset + height + borderWidth;\\n        acc.push(offset);\\n        return acc;\\n    }, [sectionBorders.top ? borderWidth : 0]);\\n\\n    const columnOffsets = horizontalOffsets.slice(0, -1);\\n    const rowOffsets = verticalOffsets.slice(0, -1);\\n\\n    const minVisibleColumnIndex = Math.max(columnOffsets.findLastIndex(offset => offset <= left), 0);\\n    const maxVisibleColumnIndex = columnOffsets.findLastIndex(offset => offset <= left + width);\\n    const minVisibleRowIndex = Math.max(rowOffsets.findLastIndex(offset => offset <= top), 0);\\n    const maxVisibleRowIndex = rowOffsets.findLastIndex(offset => offset <= top + height);\\n\\n    const minVisibleVerticalBorderIndex = Math.max(minVisibleColumnIndex, sectionBorders.left ? 0 : 1);\\n    const maxVisibleVerticalBorderIndex = maxVisibleColumnIndex + (sectionBorders.right ? 1 : 0);\\n    const minVisibleHorizontalBorderIndex = Math.max(minVisibleRowIndex, sectionBorders.top ? 0 : 1);\\n    const maxVisibleHorizontalBorderIndex = maxVisibleRowIndex + (sectionBorders.bottom ? 1 : 0);\\n\\n    const cells = Array.from({ length: maxVisibleRowIndex - minVisibleRowIndex + 1 }, (_, rowIndex) => {\\n        const row = rows[rowIndex + minVisibleRowIndex];\\n        return Array.from({ length: maxVisibleColumnIndex - minVisibleColumnIndex + 1 }, (_, columnIndex) => {\\n            const column = columns[columnIndex + minVisibleColumnIndex];\\n            return formatResolver.resolve(row, column);\\n        });\\n    });\\n    const getCell = (rowIndex, columnIndex) => cells[rowIndex - minVisibleRowIndex][columnIndex - minVisibleColumnIndex];\\n\\n    canvas.width = Math.round(width * devicePixelRatio);\\n    canvas.height = Math.round(height * devicePixelRatio);\\n    canvas.style.width = `${width}px`;\\n    canvas.style.height = `${height}px`;\\n    canvas.style.marginLeft = `${left}px`;\\n    canvas.style.marginTop = `${top}px`;\\n    canvas.style.marginRight = `${totalWidth - width - left}px`;\\n    canvas.style.marginBottom = `${totalHeight - height - top}px`;;\\n\\n    ctx.fillStyle = \\\"#E9E9E9\\\";\\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\\n\\n    const setTransform = (x, y) => {\\n        ctx.setTransform(devicePixelRatio, 0, 0, devicePixelRatio, (x - left) * devicePixelRatio, (y - top) * devicePixelRatio);\\n    };\\n    const setClip = (x, y, width, height) => {\\n        ctx.beginPath();\\n        ctx.rect(x, y, width, height);\\n        ctx.clip();\\n    };\\n\\n    // Draw cells\\n    for (let columnIndex = minVisibleColumnIndex; columnIndex <= maxVisibleColumnIndex; columnIndex++) {\\n        ctx.save();\\n        setTransform(horizontalOffsets[columnIndex], 0);\\n        setClip(0, 0, columnWidths[columnIndex], totalHeight);\\n\\n        for (let rowIndex = minVisibleRowIndex; rowIndex <= maxVisibleRowIndex; rowIndex++) {\\n            const cell = getCell(rowIndex, columnIndex);\\n            const style = cell.style;\\n            const cellTop = verticalOffsets[rowIndex];\\n            const cellLeft = horizontalOffsets[columnIndex];\\n            const cellWidth = columnWidths[columnIndex];\\n            const cellHeight = rowHeights[rowIndex];\\n            const text = 'text' in cell ? cell.text : cell.value;\\n            const textAlign = style.textAlign || 'left';\\n            const textBaseline = style.textBaseline || 'middle';\\n            const paddingLeft = 'paddingLeft' in style ? style.paddingLeft : 5;\\n            const paddingRight = 'paddingRight' in style ? style.paddingRight : 5;\\n            const paddingTop = 'paddingTop' in style ? style.paddingTop : 2;\\n            const paddingBottom = 'paddingBottom' in style ? style.paddingBottom : 2;\\n\\n            setTransform(cellLeft, cellTop);\\n\\n            ctx.fillStyle = style.background || 'white';\\n            ctx.fillRect(0, 0, cellWidth, cellHeight);\\n\\n            if ('draw' in cell)\\n                cell.draw(ctx);\\n\\n            if (style.highlight) {\\n                ctx.fillStyle = style.highlight;\\n                ctx.fillRect(0, 0, cellWidth, cellHeight);\\n            }\\n\\n            if (style.corner) {\\n                ctx.fillStyle = style.corner;\\n                ctx.beginPath();\\n                ctx.moveTo(cellWidth - 7, cellHeight);\\n                ctx.lineTo(cellWidth, cellHeight);\\n                ctx.lineTo(cellWidth, cellHeight - 7);\\n                ctx.fill();\\n            }\\n\\n            ctx.fillStyle = style.foreground || 'black';\\n            ctx.font = style.font || '12px Calibri';\\n            ctx.textAlign = textAlign;\\n\\n            const fontMetrics = textResolver.getFontMetrics(ctx.font);\\n\\n            // TODO: Make sure that values are rounded using devicePixelRatio\\n            const textX = (0,_core_utils_roundToPixels__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(\\n                textAlign === 'left' ? paddingLeft :\\n                    textAlign === 'center' ? cellWidth / 2 :\\n                        textAlign === 'right' ? cellWidth - paddingRight :\\n                            0,\\n                devicePixelRatio\\n            );\\n\\n            const textY = (0,_core_utils_roundToPixels__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(\\n                textBaseline === 'top' ? fontMetrics.middle + fontMetrics.topOffset + paddingTop :\\n                    textBaseline === 'middle' ? cellHeight / 2 + fontMetrics.middle :\\n                        textBaseline === 'bottom' ? cellHeight + fontMetrics.middle - fontMetrics.bottomOffset - paddingBottom :\\n                            0,\\n                devicePixelRatio\\n            );\\n\\n            const fitsVertically = textY - fontMetrics.middle - fontMetrics.topOffset >= 0 && textY - fontMetrics.middle + fontMetrics.bottomOffset <= cellHeight;\\n\\n            if (fitsVertically) {\\n                ctx.fillText(text, textX, textY);\\n            }\\n            else {\\n                // TODO: Clip if the text is too high (and draw some indicator if you do)\\n                ctx.strokeStyle = '#E9E9E9';\\n                ctx.lineWidth = borderWidth;\\n\\n                ctx.beginPath();\\n                ctx.moveTo(0, borderWidth + borderOffset);\\n                ctx.lineTo(cellWidth, borderWidth + borderOffset);\\n                ctx.moveTo(0, cellHeight - borderWidth - borderOffset);\\n                ctx.lineTo(cellWidth, cellHeight - borderWidth - borderOffset);\\n                ctx.stroke();\\n\\n                ctx.save();\\n                setClip(0, 2 * borderWidth, cellWidth, cellHeight - 4 * borderWidth);\\n\\n                ctx.fillText(text, textX, textY);\\n\\n                ctx.restore();\\n            }\\n        }\\n\\n        ctx.restore();\\n    }\\n\\n    setTransform(0, 0);\\n\\n    // Draw borders\\n\\n    // TODO: clip drawing area to the middle of neighboring columns/rows (might be useful for redrawing only the changed cells)\\n    // TODO: move somewhere (?)\\n    const drawBorder = (x1, y1, x2, y2, style) => {\\n        if (!style)\\n            return;\\n\\n        const width = style.width * borderWidth;\\n\\n        const isHorizontal = y1 === y2;\\n\\n        // TODO: Don't add offset if the border is not continued\\n        const xa = x1 - (isHorizontal ? width / 2 : 0);\\n        const ya = y1 - (!isHorizontal ? width / 2 : 0);\\n        const xb = x2 + (isHorizontal ? width / 2 : 0);\\n        const yb = y2 + (!isHorizontal ? width / 2 : 0);\\n\\n        ctx.strokeStyle = style.color || 'black'; // TODO: resolve this color earlier\\n        ctx.lineWidth = width;\\n\\n        if (style.dash) {\\n            ctx.setLineDash(style.dash.map(value => value / devicePixelRatio));\\n            ctx.lineDashOffset = (isHorizontal ? xa : ya);\\n        }\\n        else {\\n            ctx.setLineDash([]);\\n        }\\n\\n        ctx.beginPath();\\n        ctx.moveTo(xa, ya);\\n        ctx.lineTo(xb, yb);\\n        ctx.stroke();\\n    }\\n\\n    const selectBorder = (borderStyleA, borderStyleB) => {\\n        if (!borderStyleA)\\n            return borderStyleB;\\n\\n        if (!borderStyleB)\\n            return borderStyleA;\\n\\n        if (borderStyleA.index > borderStyleB.index)\\n            return borderStyleA;\\n\\n        return borderStyleB;\\n    }\\n\\n    // TODO: Move somewhere else (?)\\n    for (let horizontalBorderIndex = minVisibleHorizontalBorderIndex; horizontalBorderIndex <= maxVisibleHorizontalBorderIndex; horizontalBorderIndex++) {\\n        const topRowIndex = horizontalBorderIndex - 1;\\n        const bottomRowIndex = horizontalBorderIndex;\\n\\n        for (let columnIndex = minVisibleColumnIndex; columnIndex <= maxVisibleColumnIndex; columnIndex++) {\\n            const topBorderStyle = topRowIndex >= minVisibleRowIndex ? getCell(topRowIndex, columnIndex).style.borderBottom : null;\\n            const bottomBorderStyle = bottomRowIndex <= maxVisibleRowIndex ? getCell(bottomRowIndex, columnIndex).style.borderTop : null;\\n\\n            const borderStyle = selectBorder(topBorderStyle, bottomBorderStyle);\\n\\n            drawBorder(\\n                horizontalOffsets[columnIndex] - borderOffset,\\n                verticalOffsets[bottomRowIndex] - borderOffset,\\n                horizontalOffsets[columnIndex + 1] - borderOffset,\\n                verticalOffsets[bottomRowIndex] - borderOffset,\\n                borderStyle);\\n        }\\n    }\\n\\n    for (let verticalBorderIndex = minVisibleVerticalBorderIndex; verticalBorderIndex <= maxVisibleVerticalBorderIndex; verticalBorderIndex++) {\\n        const leftColumnIndex = verticalBorderIndex - 1;\\n        const rightColumnIndex = verticalBorderIndex;\\n\\n        for (let rowIndex = minVisibleRowIndex; rowIndex <= maxVisibleRowIndex; rowIndex++) {\\n            const leftBorderStyle = leftColumnIndex >= minVisibleColumnIndex ? getCell(rowIndex, leftColumnIndex).style.borderRight : null;\\n            const rightBorderStyle = rightColumnIndex <= maxVisibleColumnIndex ? getCell(rowIndex, rightColumnIndex).style.borderLeft : null;\\n\\n            const borderStyle = selectBorder(leftBorderStyle, rightBorderStyle);\\n\\n            drawBorder(\\n                horizontalOffsets[rightColumnIndex] - borderOffset,\\n                verticalOffsets[rowIndex] - borderOffset,\\n                horizontalOffsets[rightColumnIndex] - borderOffset,\\n                verticalOffsets[rowIndex + 1] - borderOffset,\\n                borderStyle);\\n        }\\n    }\\n}\\n\\nfunction renderInput(context) {\\n    const element = context.element;\\n    const input = context.input;\\n    const state = context.state;\\n    const inputPlacement = state.inputPlacement;\\n\\n    if (!inputPlacement) {\\n        if (input.parentElement) {\\n            const hasFocus = document.activeElement === input;\\n            input.parentElement.removeChild(input);\\n            if (hasFocus)\\n                element.focus();\\n        }\\n        return;\\n    }\\n\\n    if (!input.parentElement) {\\n        const hasFocus = document.activeElement === element;\\n        context.element.appendChild(input);\\n        if (hasFocus)\\n            input.focus();\\n    }\\n\\n    input.style.left = `${inputPlacement.left}px`;\\n    input.style.top = `${inputPlacement.top}px`;\\n    input.style.width = `${inputPlacement.width}px`;\\n    input.style.height = `${inputPlacement.height}px`;\\n\\n    input.style.backgroundColor = state.isTextValid ? 'white' : '#eb3434';\\n}\\n\\nfunction render(context) {\\n    renderSection(context, 'top', 'left');\\n    renderSection(context, 'top', 'center');\\n    renderSection(context, 'top', 'right');\\n    renderSection(context, 'middle', 'left');\\n    renderSection(context, 'middle', 'center');\\n    renderSection(context, 'middle', 'right');\\n    renderSection(context, 'bottom', 'left');\\n    renderSection(context, 'bottom', 'center');\\n    renderSection(context, 'bottom', 'right');\\n\\n    renderInput(context);\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/core/render.js?\");\n\n/***/ }),\n\n/***/ \"./src/core/state.js\":\n/*!***************************!*\\\n  !*** ./src/core/state.js ***!\n  \\***************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ updateState)\\n/* harmony export */ });\\n/* harmony import */ var _state_utils_getEditableCells__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../state-utils/getEditableCells */ \\\"./src/state-utils/getEditableCells.js\\\");\\n/* harmony import */ var _state_utils_getDataFormattingRules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state-utils/getDataFormattingRules */ \\\"./src/state-utils/getDataFormattingRules.js\\\");\\n/* harmony import */ var _state_utils_getInputFormattingRules__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state-utils/getInputFormattingRules */ \\\"./src/state-utils/getInputFormattingRules.js\\\");\\n/* harmony import */ var _state_utils_getRenderFormattingRules__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../state-utils/getRenderFormattingRules */ \\\"./src/state-utils/getRenderFormattingRules.js\\\");\\n/* harmony import */ var _state_utils_getSections__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../state-utils/getSections */ \\\"./src/state-utils/getSections.js\\\");\\n/* harmony import */ var _state_utils_getVisibilityFormattingRules__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../state-utils/getVisibilityFormattingRules */ \\\"./src/state-utils/getVisibilityFormattingRules.js\\\");\\n/* harmony import */ var _state_utils_getEditedCellsAndFilters__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../state-utils/getEditedCellsAndFilters */ \\\"./src/state-utils/getEditedCellsAndFilters.js\\\");\\n/* harmony import */ var _state_utils_getEdition__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../state-utils/getEdition */ \\\"./src/state-utils/getEdition.js\\\");\\n/* harmony import */ var _state_utils_getFilters__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../state-utils/getFilters */ \\\"./src/state-utils/getFilters.js\\\");\\n/* harmony import */ var _state_utils_getSelection__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../state-utils/getSelection */ \\\"./src/state-utils/getSelection.js\\\");\\n/* harmony import */ var _state_utils_getColumnsOrRows__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../state-utils/getColumnsOrRows */ \\\"./src/state-utils/getColumnsOrRows.js\\\");\\n/* harmony import */ var _state_utils_getResolvedColumnsOrRows__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../state-utils/getResolvedColumnsOrRows */ \\\"./src/state-utils/getResolvedColumnsOrRows.js\\\");\\n/* harmony import */ var _state_utils_getPlacedColumns__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../state-utils/getPlacedColumns */ \\\"./src/state-utils/getPlacedColumns.js\\\");\\n/* harmony import */ var _state_utils_getPlacedRows__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../state-utils/getPlacedRows */ \\\"./src/state-utils/getPlacedRows.js\\\");\\n/* harmony import */ var _state_utils_getFormattingRules__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../state-utils/getFormattingRules */ \\\"./src/state-utils/getFormattingRules.js\\\");\\n/* harmony import */ var _state_utils_getFormatResolver__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../state-utils/getFormatResolver */ \\\"./src/state-utils/getFormatResolver.js\\\");\\n/* harmony import */ var _state_utils_getVisibilityResolver__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../state-utils/getVisibilityResolver */ \\\"./src/state-utils/getVisibilityResolver.js\\\");\\n/* harmony import */ var _state_utils_getVisibleColumns__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../state-utils/getVisibleColumns */ \\\"./src/state-utils/getVisibleColumns.js\\\");\\n/* harmony import */ var _state_utils_getVisibleRows__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../state-utils/getVisibleRows */ \\\"./src/state-utils/getVisibleRows.js\\\");\\n/* harmony import */ var _state_utils_getFixedSize__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../state-utils/getFixedSize */ \\\"./src/state-utils/getFixedSize.js\\\");\\n/* harmony import */ var _state_utils_getTotalSize__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../state-utils/getTotalSize */ \\\"./src/state-utils/getTotalSize.js\\\");\\n/* harmony import */ var _state_utils_getTextResolver__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../state-utils/getTextResolver */ \\\"./src/state-utils/getTextResolver.js\\\");\\n/* harmony import */ var _state_utils_getScrollRect__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../state-utils/getScrollRect */ \\\"./src/state-utils/getScrollRect.js\\\");\\n/* harmony import */ var _state_utils_getHoveredCell__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../state-utils/getHoveredCell */ \\\"./src/state-utils/getHoveredCell.js\\\");\\n/* harmony import */ var _state_utils_getLookup__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../state-utils/getLookup */ \\\"./src/state-utils/getLookup.js\\\");\\n/* harmony import */ var _state_utils_getHighlightedCells__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../state-utils/getHighlightedCells */ \\\"./src/state-utils/getHighlightedCells.js\\\");\\n/* harmony import */ var _state_utils_getInputPlacement__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../state-utils/getInputPlacement */ \\\"./src/state-utils/getInputPlacement.js\\\");\\n/* harmony import */ var _state_utils_getIsTextValid__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../state-utils/getIsTextValid */ \\\"./src/state-utils/getIsTextValid.js\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nfunction updateState(context) {\\n    console.count('updateState');\\n\\n    const options = { ...context.localOptions, ...context.externalOptions };\\n    const memory = context.memory;\\n    const previousState = context.state;\\n\\n    // TODO: Move to utils\\n    function cache(key, func, dependencies) {\\n        const previousDependencies = memory[key] && memory[key].dependencies;\\n        if (!previousDependencies || dependencies.some((dependency, index) => dependency !== previousDependencies[index]))\\n            memory[key] = { value: func(...dependencies), dependencies };\\n        return memory[key].value;\\n    }\\n\\n    const devicePixelRatio = window.devicePixelRatio; // TODO: Trigger update on devicePixelRatio change\\n    const borderWidth = options.borderWidth / devicePixelRatio;\\n    const data = options.data;\\n    const text = context.input.value;\\n    const dataFormatting = cache('dataFormatting', _state_utils_getDataFormattingRules__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"], [options.formatting, options.dataSelector]);\\n    const editedCellsAndFilters = cache('editedCellsAndFilters', _state_utils_getEditedCellsAndFilters__WEBPACK_IMPORTED_MODULE_6__[\\\"default\\\"], [options.editedCells, options.filters]);\\n    const edition = cache('edition', _state_utils_getEdition__WEBPACK_IMPORTED_MODULE_7__[\\\"default\\\"], [editedCellsAndFilters]);\\n    const filters = cache('filters', _state_utils_getFilters__WEBPACK_IMPORTED_MODULE_8__[\\\"default\\\"], [options.filters]);\\n    const invokedColumns = cache('invokedColumns', _state_utils_getColumnsOrRows__WEBPACK_IMPORTED_MODULE_10__[\\\"default\\\"], [options.columns, data]);\\n    const invokedRows = cache('invokedRows', _state_utils_getColumnsOrRows__WEBPACK_IMPORTED_MODULE_10__[\\\"default\\\"], [options.rows, data]);\\n    const unfilteredColumns = cache('unfilteredColumns', _state_utils_getResolvedColumnsOrRows__WEBPACK_IMPORTED_MODULE_11__[\\\"default\\\"], [invokedColumns, options.pinnedLeft, options.pinnedRight]);\\n    const unfilteredRows = cache('unfilteredRows', _state_utils_getResolvedColumnsOrRows__WEBPACK_IMPORTED_MODULE_11__[\\\"default\\\"], [invokedRows, options.pinnedTop, options.pinnedBottom]);\\n    const visibilityFormatting = cache('visibilityFormatting', _state_utils_getVisibilityFormattingRules__WEBPACK_IMPORTED_MODULE_5__[\\\"default\\\"], [dataFormatting]);\\n    const visibilityFormattingRules = cache('visibilityFormattingRules', _state_utils_getFormattingRules__WEBPACK_IMPORTED_MODULE_14__[\\\"default\\\"], [visibilityFormatting]);\\n    const visibilityResolver = cache('visibilityResolver', _state_utils_getVisibilityResolver__WEBPACK_IMPORTED_MODULE_16__[\\\"default\\\"], [visibilityFormattingRules, data, unfilteredRows, unfilteredColumns, filters]);\\n    const filteredColumns = cache('filteredColumns', _state_utils_getVisibleColumns__WEBPACK_IMPORTED_MODULE_17__[\\\"default\\\"], [visibilityResolver]);\\n    const filteredRows = cache('filteredRows', _state_utils_getVisibleRows__WEBPACK_IMPORTED_MODULE_18__[\\\"default\\\"], [visibilityResolver]);\\n    const columns = cache('columns', _state_utils_getPlacedColumns__WEBPACK_IMPORTED_MODULE_12__[\\\"default\\\"], [filteredColumns, devicePixelRatio, borderWidth]);\\n    const rows = cache('rows', _state_utils_getPlacedRows__WEBPACK_IMPORTED_MODULE_13__[\\\"default\\\"], [filteredRows, devicePixelRatio, borderWidth]);\\n    const columnLookup = cache('columnLookup', _state_utils_getLookup__WEBPACK_IMPORTED_MODULE_24__[\\\"default\\\"], [columns]);\\n    const rowLookup = cache('rowLookup', _state_utils_getLookup__WEBPACK_IMPORTED_MODULE_24__[\\\"default\\\"], [rows]);\\n    const focusedCell = options.focusedCell;\\n    const sections = cache('sections', _state_utils_getSections__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"], [columns, rows]);\\n    const selectedCells = options.selectedCells;\\n    const fixedSize = cache('fixedSize', _state_utils_getFixedSize__WEBPACK_IMPORTED_MODULE_19__[\\\"default\\\"], [sections.top.height, sections.bottom.height, sections.left.width, sections.right.width]);\\n    const totalSize = cache('totalSize', _state_utils_getTotalSize__WEBPACK_IMPORTED_MODULE_20__[\\\"default\\\"], [columns, rows]);\\n    // TODO: do some proper caching, so that if value is not changed, the old value is returned (currently not working because of scrolling)\\n    const hoveredCell = (0,_state_utils_getHoveredCell__WEBPACK_IMPORTED_MODULE_23__[\\\"default\\\"])(context.element, context.mousePosition, rows, columns, fixedSize, totalSize);\\n    const isMouseDown = context.isMouseDown;\\n    const highlightedCells = cache('highlightedCells', _state_utils_getHighlightedCells__WEBPACK_IMPORTED_MODULE_25__[\\\"default\\\"], [isMouseDown, focusedCell, hoveredCell, columns, rows, columnLookup, rowLookup]);\\n    const selection = cache('selection', _state_utils_getSelection__WEBPACK_IMPORTED_MODULE_9__[\\\"default\\\"], [selectedCells]);\\n    const highlight = cache('highlight', _state_utils_getSelection__WEBPACK_IMPORTED_MODULE_9__[\\\"default\\\"], [highlightedCells]);\\n    // TODO: addDataFormattingRules and addRenderFormattingRules should remove unnecessary rules\\n    const renderFormatting = cache('renderFormatting', _state_utils_getRenderFormattingRules__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"], [dataFormatting, hoveredCell, focusedCell, selection, highlight, edition]);\\n    const renderFormattingRules = cache('renderFormattingRules', _state_utils_getFormattingRules__WEBPACK_IMPORTED_MODULE_14__[\\\"default\\\"], [renderFormatting]);\\n    const renderFormatResolver = cache('renderFormatResolver', _state_utils_getFormatResolver__WEBPACK_IMPORTED_MODULE_15__[\\\"default\\\"], [renderFormattingRules, data, rows, columns, edition]);\\n    const inputFormatting = cache('inputFormatting', _state_utils_getInputFormattingRules__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"], [dataFormatting]);\\n    const inputFormattingRules = cache('inputFormattingRules', _state_utils_getFormattingRules__WEBPACK_IMPORTED_MODULE_14__[\\\"default\\\"], [inputFormatting]);\\n    const inputFormatResolver = cache('inputFormatResolver', _state_utils_getFormatResolver__WEBPACK_IMPORTED_MODULE_15__[\\\"default\\\"], [inputFormattingRules, data, rows, columns, edition]);\\n    const textResolver = cache('textResolver', _state_utils_getTextResolver__WEBPACK_IMPORTED_MODULE_21__[\\\"default\\\"], []);\\n    const editableCells = cache('editableCells', _state_utils_getEditableCells__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"], [selectedCells, inputFormatResolver, columnLookup, rowLookup]);\\n    const inputPlacement = cache('inputPlacement', _state_utils_getInputPlacement__WEBPACK_IMPORTED_MODULE_26__[\\\"default\\\"], [editableCells, focusedCell, columnLookup, rowLookup]);\\n    const isTextValid = cache('isTextValid', _state_utils_getIsTextValid__WEBPACK_IMPORTED_MODULE_27__[\\\"default\\\"], [text, editableCells]);\\n\\n    // cache result, but not call\\n    const scrollRect = (0,_state_utils_getScrollRect__WEBPACK_IMPORTED_MODULE_22__[\\\"default\\\"])(previousState?.scrollRect, totalSize, fixedSize, context.element);\\n\\n    context.state = {\\n        options,\\n        devicePixelRatio,\\n        borderWidth,\\n        data,\\n        dataFormatting,\\n        edition,\\n        filters,\\n        unfilteredColumns,\\n        unfilteredRows,\\n        visibilityFormatting,\\n        visibilityResolver,\\n        filteredColumns,\\n        filteredRows,\\n        columns,\\n        rows,\\n        sections,\\n        selectedCells,\\n        selection,\\n        highlight,\\n        hoveredCell,\\n        focusedCell,\\n        renderFormatting,\\n        renderFormatResolver,\\n        inputFormatting,\\n        inputFormatResolver,\\n        fixedSize,\\n        totalSize,\\n        textResolver,\\n        scrollRect,\\n        highlightedCells,\\n        inputPlacement,\\n        columnLookup,\\n        rowLookup,\\n        text,\\n        isTextValid\\n    };\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/core/state.js?\");\n\n/***/ }),\n\n/***/ \"./src/index.js\":\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ createGrid)\\n/* harmony export */ });\\n/* harmony import */ var _state_utils_getEditableCells__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state-utils/getEditableCells */ \\\"./src/state-utils/getEditableCells.js\\\");\\n/* harmony import */ var _core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core-utils/stringifyId */ \\\"./src/core-utils/stringifyId.js\\\");\\n/* harmony import */ var _core_render__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/render */ \\\"./src/core/render.js\\\");\\n/* harmony import */ var _core_state__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/state */ \\\"./src/core/state.js\\\");\\n/* harmony import */ var _state_utils_getCombinedCells__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./state-utils/getCombinedCells */ \\\"./src/state-utils/getCombinedCells.js\\\");\\n/* harmony import */ var _state_utils_getReducedCells__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./state-utils/getReducedCells */ \\\"./src/state-utils/getReducedCells.js\\\");\\n\\n\\n\\n\\n\\n\\n\\nfunction initialize(element) {\\n    if ('spread-grid-context' in element) return;\\n\\n    const canvases = {\\n        'top-left': document.createElement('canvas'),\\n        'top-center': document.createElement('canvas'),\\n        'top-right': document.createElement('canvas'),\\n        'middle-left': document.createElement('canvas'),\\n        'middle-center': document.createElement('canvas'),\\n        'middle-right': document.createElement('canvas'),\\n        'bottom-left': document.createElement('canvas'),\\n        'bottom-center': document.createElement('canvas'),\\n        'bottom-right': document.createElement('canvas')\\n    };\\n    const input = document.createElement('input');\\n\\n    element.setAttribute('tabindex', '0');\\n    element.setAttribute('style', 'max-width: 100vw; max-height: 100vh; overflow: auto; display: grid; position: relative; grid-template-columns: fit-content(0) fit-content(0) fit-content(0); grid-template-rows: fit-content(0) fit-content(0) fit-content(0); outline: none;');\\n    element.classList.add('spread-grid');\\n    canvases['top-left'].setAttribute('style', 'position: sticky; left: 0; top: 0; z-index: 2; grid-row: 1; grid-column: 1;');\\n    canvases['top-center'].setAttribute('style', 'position: sticky; top: 0; z-index: 1; grid-row: 1; grid-column: 2;');\\n    canvases['top-right'].setAttribute('style', 'position: sticky; right: 0; top: 0; z-index: 2; grid-row: 1; grid-column: 3;');\\n    canvases['middle-left'].setAttribute('style', 'position: sticky; left: 0; z-index: 1; grid-row: 2; grid-column: 1;');\\n    canvases['middle-center'].setAttribute('style', 'grid-row: 2; grid-column: 2;');\\n    canvases['middle-right'].setAttribute('style', 'position: sticky; right: 0; z-index: 1; grid-row: 2; grid-column: 3;');\\n    canvases['bottom-left'].setAttribute('style', 'position: sticky; left: 0; bottom: 0; z-index: 2; grid-row: 3; grid-column: 1;');\\n    canvases['bottom-center'].setAttribute('style', 'position: sticky; bottom: 0; z-index: 1; grid-row: 3; grid-column: 2;');\\n    canvases['bottom-right'].setAttribute('style', 'position: sticky; right: 0; bottom: 0; z-index: 2; grid-row: 3; grid-column: 3;');\\n    input.setAttribute('style', 'position: absolute; z-index: 3; outline: none; border: none; box-shadow: none; padding: 0 5px; font-size: 12px; font-family: Calibri; background-color: white; box-sizing: border-box; opacity: 0; pointer-events: none;');\\n\\n    const context = {\\n        externalOptions: {},\\n        state: null,\\n        memory: {},\\n        element: element,\\n        canvases: canvases,\\n        input: input,\\n        renderRequested: false,\\n        mousePosition: null,\\n        isMouseDown: false,\\n    };\\n\\n    context.requestNewRender = () => {\\n        if (context.renderRequested) return;\\n        context.renderRequested = true;\\n        requestAnimationFrame(() => {\\n            context.renderRequested = false;\\n            (0,_core_state__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"])(context);\\n            (0,_core_render__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"])(context);\\n        });\\n    };\\n\\n    context.localOptions = {\\n        data: [],\\n        columns: data => data.length > 0 ? Object.keys(data[0]).map(key => ({ id: key, header: key, width: 100 })) : [],\\n        rows: data => [{ id: 'top-header', type: 'HEADER', height: 20 }, ...data.map((_, index) => ({ id: index, height: 20 }))],\\n        formatting: [],\\n        dataSelector: ({ data, row, column }) => data[row.id][column.id],\\n        pinnedTop: 0,\\n        pinnedBottom: 0,\\n        pinnedLeft: 0,\\n        pinnedRight: 0,\\n        borderWidth: 1,\\n        focusedCell: null,\\n        onFocusedCellChange: (focusedCell) => {\\n            context.localOptions.focusedCell = focusedCell;\\n            context.requestNewRender();\\n        },\\n        selectedCells: [],\\n        onSelectedCellsChange: (selectedCells) => {\\n            context.localOptions.selectedCells = selectedCells;\\n            context.requestNewRender();\\n        },\\n        highlightedCells: [],\\n        editedCells: [],\\n        onEditedCellsChange: (editedCells) => {\\n            // TODO: optimize by coalescing\\n            context.localOptions.editedCells = editedCells;\\n            context.requestNewRender();\\n        },\\n        filters: [],\\n        onFiltersChange: (filters) => {\\n            context.localOptions.filters = filters;\\n            context.requestNewRender();\\n        },\\n    };\\n\\n    element['spread-grid-context'] = context;\\n\\n    const setText = (text) => {\\n        input.value = text;\\n        input.dispatchEvent(new Event('input'));\\n    }\\n\\n    element.addEventListener('scroll', (event) => {\\n        // TODO: only request new render if scroll position changed outside of the scope\\n        // TODO: how to: calculate the new scrollRect here and compare it to the one in the state\\n        // TODO: Also don't forget to check if the highlighted cell did change\\n        // TODO: Consider forcing a new render when visible scrollRect changes (without waiting for the next render frame)\\n        context.requestNewRender();\\n    });\\n\\n    element.addEventListener('mouseenter', (event) => {\\n        context.mousePosition = {\\n            x: event.clientX - element.offsetLeft,\\n            y: event.clientY - element.offsetTop\\n        };\\n        context.requestNewRender();\\n    });\\n\\n    element.addEventListener('mousemove', (event) => {\\n        context.mousePosition = {\\n            x: event.clientX - element.offsetLeft,\\n            y: event.clientY - element.offsetTop\\n        };\\n        // TODO: only request new render if hovered cell changed\\n        context.requestNewRender();\\n    });\\n\\n    element.addEventListener('mouseleave', () => {\\n        context.mousePosition = null;\\n        context.requestNewRender();\\n    });\\n\\n    element.addEventListener('mousedown', (event) => {\\n        (0,_core_state__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"])(context);\\n        setText('');\\n\\n        context.isMouseDown = true;\\n        context.state.options.onFocusedCellChange(context.state.hoveredCell);\\n\\n        if (!event.ctrlKey)\\n            context.state.options.onSelectedCellsChange([]);\\n\\n        context.requestNewRender();\\n    });\\n\\n    element.addEventListener('mouseup', (event) => {\\n        (0,_core_state__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"])(context);\\n\\n        context.isMouseDown = false;\\n        context.state.options.onSelectedCellsChange((0,_state_utils_getCombinedCells__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"])(context.state.options.selectedCells, context.state.highlightedCells));\\n        context.requestNewRender();\\n    });\\n\\n    element.addEventListener('dblclick', (event) => {\\n        (0,_core_state__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"])(context);\\n\\n        const focusedCell = context.state.focusedCell;\\n        if (focusedCell === null)\\n            return;\\n\\n        const focusedColumnKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(focusedCell.columnId);\\n        const focusedRowKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(focusedCell.rowId);\\n        const columnLookup = context.state.columnLookup;\\n        const rowLookup = context.state.rowLookup;\\n        const formatResolver = context.state.inputFormatResolver;\\n\\n        if (!columnLookup.has(focusedColumnKey))\\n            return;\\n        if (!rowLookup.has(focusedRowKey))\\n            return;\\n\\n        const column = columnLookup.get(focusedColumnKey);\\n        const row = rowLookup.get(focusedRowKey);\\n        const cell = formatResolver.resolve(row, column);\\n        const text = `${cell.value}` // TODO: Use the text, not value (???)\\n\\n        setText(text);\\n        input?.select();\\n    });\\n\\n    element.addEventListener('focus', () => {\\n        if (input.parentElement)\\n            input.focus();\\n    });\\n\\n    element.addEventListener('keydown', (event) => {\\n        // TODO: make sure it's not invoked on keydown of the input\\n        (0,_core_state__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"])(context);\\n\\n        const focusedCell = context.state.focusedCell;\\n        const columnLookup = context.state.columnLookup;\\n        const rowLookup = context.state.rowLookup;\\n        const formatResolver = context.state.inputFormatResolver;\\n        const selectedCells = context.state.options.selectedCells;\\n        const setSelectedCells = context.state.options.onSelectedCellsChange;\\n        const addSelectedCells = (cells) => setSelectedCells((0,_state_utils_getCombinedCells__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"])(selectedCells, cells));\\n        const setFocusedCell = context.state.options.onFocusedCellChange;\\n        const editedCells = context.state.options.editedCells;\\n        const setEditedCells = context.state.options.onEditedCellsChange;\\n        const addEditedCells = (cells) => setEditedCells((0,_state_utils_getCombinedCells__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"])(context.state.options.editedCells, cells));\\n        const removeEditedCells = (cells) => setEditedCells((0,_state_utils_getReducedCells__WEBPACK_IMPORTED_MODULE_5__[\\\"default\\\"])(context.state.options.editedCells, cells));\\n        const setFilters = context.state.options.onFiltersChange;\\n        const addFilters = (cells) => setFilters((0,_state_utils_getCombinedCells__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"])(context.state.options.filters, cells));\\n        const removeFilters = (cells) => setFilters((0,_state_utils_getReducedCells__WEBPACK_IMPORTED_MODULE_5__[\\\"default\\\"])(context.state.options.filters, cells));\\n        const columns = context.state.columns;\\n        const rows = context.state.rows;\\n        const text = context.state.text;\\n        const isTextValid = context.state.isTextValid;\\n\\n        const arrowTo = (cell, event) => {\\n            setFocusedCell(cell);\\n\\n            if (event.shiftKey)\\n                addSelectedCells([cell]);\\n            else\\n                setSelectedCells([cell]);\\n        };\\n\\n        const arrowHorizontally = (offset, event) => {\\n            if (!focusedCell)\\n                return;\\n\\n            const focusedColumnKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(focusedCell.columnId);\\n            if (!columnLookup.has(focusedColumnKey))\\n                return;\\n\\n            const focusedColumnIndex = columnLookup.get(focusedColumnKey).index;\\n            const newColumnIndex = Math.max(0, Math.min(columns.length - 1, focusedColumnIndex + offset));\\n            if (newColumnIndex === focusedColumnIndex)\\n                return;\\n\\n            const newFocusedCell = { rowId: focusedCell.rowId, columnId: columns[newColumnIndex].id };\\n\\n            arrowTo(newFocusedCell, event);\\n        }\\n\\n        const arrowVertically = (offset, event) => {\\n            if (!focusedCell)\\n                return;\\n\\n            const focusedRowKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(focusedCell.rowId);\\n            if (!rowLookup.has(focusedRowKey))\\n                return;\\n\\n            const focusedRowIndex = rowLookup.get(focusedRowKey).index;\\n            const newRowIndex = Math.max(0, Math.min(rows.length - 1, focusedRowIndex + offset));\\n            if (newRowIndex === focusedRowIndex)\\n                return;\\n\\n            const newFocusedCell = { rowId: rows[newRowIndex].id, columnId: focusedCell.columnId };\\n\\n            arrowTo(newFocusedCell, event);\\n        }\\n\\n        const preventDefault = () => {\\n            event.preventDefault();\\n            event.stopPropagation();\\n        };\\n\\n        const cancel = () => {\\n            if (text !== '') {\\n                setText('');\\n            }\\n            else if (selectedCells.length > 1) {\\n                setSelectedCells([focusedCell]);\\n            }\\n            else if (editedCells.length > 0) {\\n                setEditedCells([]);\\n            }\\n            else {\\n                setFocusedCell(null);\\n                setSelectedCells([]);\\n            }\\n        };\\n\\n        const accept = () => {\\n            const editableCells = (0,_state_utils_getEditableCells__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(selectedCells, formatResolver, columnLookup, rowLookup);\\n\\n            if (text === '')\\n                return;\\n            if (!isTextValid)\\n                return;\\n\\n            const dataCells = editableCells.filter(cell => cell.type === 'DATA');\\n            const filterCells = editableCells.filter(cell => cell.type === 'FILTER');\\n\\n            addEditedCells(dataCells.map(cell => ({ ...cell.cell, value: cell.edit.parse({ string: text }) })));\\n            addFilters(filterCells.map(cell => ({ ...cell.cell, expression: cell.edit.parse({ string: text }) })));\\n\\n            setText('');\\n        };\\n\\n        const clear = () => {\\n            removeEditedCells(selectedCells);\\n            removeFilters(selectedCells);\\n        }\\n\\n        switch (event.key) {\\n            case 'Escape':\\n                cancel();\\n                break;\\n            case 'Enter':\\n                accept();\\n                break;\\n            case 'ArrowUp':\\n                // TODO: When ctrl and shift are pressed together, select all cells between the focused cell and the new cell\\n                // TODO: When shift is pressed, expand the current rect selection instead of moving the focused cell\\n                preventDefault();\\n                arrowVertically(event.ctrlKey ? -rows.length : -1, event);\\n                break;\\n            case 'ArrowDown':\\n                preventDefault();\\n                arrowVertically(event.ctrlKey ? rows.length : 1, event);\\n                break;\\n            case 'ArrowLeft':\\n                preventDefault();\\n                arrowHorizontally(event.ctrlKey ? -columns.length : -1, event);\\n                break;\\n            case 'ArrowRight':\\n                preventDefault();\\n                arrowHorizontally(event.ctrlKey ? columns.length : 1, event);\\n                break;\\n            case 'Delete':\\n            case 'Backspace':\\n                clear();\\n                break;\\n            default:\\n                break;\\n        }\\n    });\\n\\n    new ResizeObserver(() => {\\n        context.requestNewRender();\\n    }).observe(element);\\n\\n    input.addEventListener('input', (event) => {\\n        if (event.target.value) {\\n            input.style.opacity = 1;\\n            input.style.pointerEvents = 'auto';\\n        }\\n        else {\\n            input.style.opacity = 0;\\n            input.style.pointerEvents = 'none';\\n        }\\n    });\\n\\n    input.addEventListener('click', (event) => {\\n        event.stopPropagation();\\n    });\\n\\n    input.addEventListener('dblclick', (event) => {\\n        event.stopPropagation();\\n    });\\n\\n    input.addEventListener('mousedown', (event) => {\\n        event.stopPropagation();\\n    });\\n\\n    input.addEventListener('keydown', (event) => {\\n        switch (event.key) {\\n            case 'Enter':\\n            case 'Escape':\\n                break;\\n            case 'Delete':\\n            case 'Backspace':\\n            case 'ArrowUp':\\n            case 'ArrowDown':\\n            case 'ArrowLeft':\\n            case 'ArrowRight':\\n                if (input.value !== '') {\\n                    event.stopPropagation();\\n                    context.requestNewRender();\\n                }\\n                break;\\n            default:\\n                event.stopPropagation();\\n                // TODO: maybe only check if the new text is valid\\n                context.requestNewRender();\\n                break;\\n        }\\n    });\\n}\\n\\nfunction createGrid(element, options) {\\n    console.log('createGrid');\\n\\n    initialize(element);\\n\\n    const context = element['spread-grid-context'];\\n    context.externalOptions = options;\\n\\n    if (context.state === null) {\\n        (0,_core_state__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"])(context);\\n        (0,_core_render__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"])(context);\\n    }\\n    else {\\n        context.requestNewRender();\\n    }\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/index.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getCellType.js\":\n/*!****************************************!*\\\n  !*** ./src/state-utils/getCellType.js ***!\n  \\****************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getCellType)\\n/* harmony export */ });\\nfunction getCellType(column, row) {\\n    if (column.type === 'FILTER' ^ row.type === 'FILTER')\\n        return 'FILTER';\\n    if (column.type === 'DATA' && row.type === 'DATA')\\n        return 'DATA';\\n    return 'OTHER';\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getCellType.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getColumnIndex.js\":\n/*!*******************************************!*\\\n  !*** ./src/state-utils/getColumnIndex.js ***!\n  \\*******************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getColumnIndex)\\n/* harmony export */ });\\nfunction getColumnIndex(columns, x) {\\n    if (columns.length === 0)\\n        return -1;\\n    if (x < columns[0].leftWithBorder)\\n        return -1;\\n    if (x > columns[columns.length - 1].rightWithBorder)\\n        return -1;\\n\\n    let iterA = 0;\\n    let iterC = columns.length - 1;\\n\\n    while (iterA <= iterC) {\\n        const iterB = Math.floor((iterA + iterC) / 2);\\n\\n        if (x < columns[iterB].leftWithBorder)\\n            iterC = iterB - 1;\\n        else if (x > columns[iterB].rightWithBorder)\\n            iterA = iterB + 1;\\n\\n        else\\n            return iterB;\\n    }\\n\\n    return -1;\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getColumnIndex.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getColumnsOrRows.js\":\n/*!*********************************************!*\\\n  !*** ./src/state-utils/getColumnsOrRows.js ***!\n  \\*********************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getColumnsOrRows)\\n/* harmony export */ });\\nfunction getColumnsOrRows(columnsOrRows, data) {\\n    return typeof columnsOrRows === 'function'\\n        ? columnsOrRows(data)\\n        : columnsOrRows;\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getColumnsOrRows.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getCombinedCells.js\":\n/*!*********************************************!*\\\n  !*** ./src/state-utils/getCombinedCells.js ***!\n  \\*********************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getCombinedCells)\\n/* harmony export */ });\\n/* harmony import */ var _types_Selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types/Selection */ \\\"./src/types/Selection.js\\\");\\n\\n\\nfunction getCombinedCells(previousCells, newCells) {\\n    const selection = new _types_Selection__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](newCells);\\n    return [...newCells, ...previousCells.filter(cell => !selection.isIdSelected(cell.rowId, cell.columnId))];\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getCombinedCells.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getDataFormattingRules.js\":\n/*!***************************************************!*\\\n  !*** ./src/state-utils/getDataFormattingRules.js ***!\n  \\***************************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getDataFormattingRules)\\n/* harmony export */ });\\nfunction getDataFormattingRules(formatting, dataSelector) {\\n    return [\\n        {\\n            column: { match: 'ANY' },\\n            row: { match: 'HEADER' },\\n            value: ({column}) => column.header\\n        },\\n        {\\n            column: { match: 'ANY' },\\n            row: { match: 'FILTER' },\\n            value: ({newValue}) => newValue || '',\\n            text: ({newValue}) => newValue || 'Search...',\\n            edit: {\\n                validate: () => true,\\n                parse: ({ string }) => string,\\n            },\\n        },\\n        {\\n            column: { match: 'DATA' },\\n            row: { match: 'DATA' },\\n            value: dataSelector\\n        },\\n        ...formatting\\n    ];\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getDataFormattingRules.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getEditableCells.js\":\n/*!*********************************************!*\\\n  !*** ./src/state-utils/getEditableCells.js ***!\n  \\*********************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getEditableCells)\\n/* harmony export */ });\\n/* harmony import */ var _core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core-utils/stringifyId */ \\\"./src/core-utils/stringifyId.js\\\");\\n/* harmony import */ var _getCellType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getCellType */ \\\"./src/state-utils/getCellType.js\\\");\\n\\n\\n\\nfunction getEditableCells(selectedCells, formatResolver, columnLookup, rowLookup) {\\n    return selectedCells.map(cell => {\\n        const columnKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(cell.columnId);\\n        const rowKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(cell.rowId);\\n\\n        if (!columnLookup.has(columnKey))\\n            return null;\\n        if (!rowLookup.has(rowKey))\\n            return null;\\n\\n        const column = columnLookup.get(columnKey);\\n        const row = rowLookup.get(rowKey);\\n\\n        return {\\n            edit: formatResolver.resolve(row, column).edit,\\n            cell: cell,\\n            type: (0,_getCellType__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(column, row)\\n        }\\n    }).filter(cell => cell?.edit);\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getEditableCells.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getEditedCellsAndFilters.js\":\n/*!*****************************************************!*\\\n  !*** ./src/state-utils/getEditedCellsAndFilters.js ***!\n  \\*****************************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getEditedCellsAndFilters)\\n/* harmony export */ });\\n// TODO: Move\\nfunction getEditedCellsAndFilters(editedCells, filters) {\\n    return [...editedCells, ...filters.map(filter => ({ columnId: filter.columnId, rowId: filter.rowId, value: filter.expression }))];\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getEditedCellsAndFilters.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getEdition.js\":\n/*!***************************************!*\\\n  !*** ./src/state-utils/getEdition.js ***!\n  \\***************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getEdition)\\n/* harmony export */ });\\n/* harmony import */ var _types_Edition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types/Edition */ \\\"./src/types/Edition.js\\\");\\n\\n\\n// TODO: Move\\nfunction getEdition(editedCellsAndFilters) {\\n    return new _types_Edition__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](editedCellsAndFilters);\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getEdition.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getFilters.js\":\n/*!***************************************!*\\\n  !*** ./src/state-utils/getFilters.js ***!\n  \\***************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getFilters)\\n/* harmony export */ });\\n/* harmony import */ var _types_Filtering__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types/Filtering */ \\\"./src/types/Filtering.js\\\");\\n\\n\\n// TODO: Move\\nfunction getFilters(filters) {\\n    return new _types_Filtering__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](filters);\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getFilters.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getFixedSize.js\":\n/*!*****************************************!*\\\n  !*** ./src/state-utils/getFixedSize.js ***!\n  \\*****************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getFixedSize)\\n/* harmony export */ });\\nfunction getFixedSize(top, bottom, left, right) {\\n    return {\\n        top: top,\\n        bottom: bottom,\\n        left: left,\\n        right: right\\n    };\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getFixedSize.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getFormatResolver.js\":\n/*!**********************************************!*\\\n  !*** ./src/state-utils/getFormatResolver.js ***!\n  \\**********************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getFormatResolver)\\n/* harmony export */ });\\n/* harmony import */ var _types_FormatResolver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types/FormatResolver */ \\\"./src/types/FormatResolver.js\\\");\\n\\n\\nfunction getFormatResolver(formattingRules, data, rows, columns, edition) {\\n    return new _types_FormatResolver__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](formattingRules, data, rows, columns, edition);\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getFormatResolver.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getFormattingRules.js\":\n/*!***********************************************!*\\\n  !*** ./src/state-utils/getFormattingRules.js ***!\n  \\***********************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getFormattingRules)\\n/* harmony export */ });\\n/* harmony import */ var _types_FormattingRules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types/FormattingRules */ \\\"./src/types/FormattingRules.js\\\");\\n\\n\\nfunction getFormattingRules(dataFormatting) {\\n    return new _types_FormattingRules__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](dataFormatting);\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getFormattingRules.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getHighlightedCells.js\":\n/*!************************************************!*\\\n  !*** ./src/state-utils/getHighlightedCells.js ***!\n  \\************************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getHighlightedCells)\\n/* harmony export */ });\\n/* harmony import */ var _core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core-utils/stringifyId */ \\\"./src/core-utils/stringifyId.js\\\");\\n\\n\\nfunction getHighlightedCells(isMouseDown, focusedCell, hoveredCell, columns, rows, columnLookup, rowLookup) {\\n    if (!isMouseDown)\\n        return [];\\n    if (!hoveredCell)\\n        return [];\\n    if (!focusedCell)\\n        return [];\\n\\n    const focusedColumnKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(focusedCell.columnId);\\n    const focusedRowKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(focusedCell.rowId);\\n    const hoveredColumnKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(hoveredCell.columnId);\\n    const hoveredRowKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(hoveredCell.rowId);\\n\\n    if (!columnLookup.has(focusedColumnKey))\\n        return [];\\n    if (!rowLookup.has(focusedRowKey))\\n        return [];\\n    if (!columnLookup.has(hoveredColumnKey))\\n        return [];\\n    if (!rowLookup.has(hoveredRowKey))\\n        return [];\\n\\n    const minColumnIndex = Math.min(columnLookup.get(focusedColumnKey).index, columnLookup.get(hoveredColumnKey).index);\\n    const maxColumnIndex = Math.max(columnLookup.get(focusedColumnKey).index, columnLookup.get(hoveredColumnKey).index);\\n    const minRowIndex = Math.min(rowLookup.get(focusedRowKey).index, rowLookup.get(hoveredRowKey).index);\\n    const maxRowIndex = Math.max(rowLookup.get(focusedRowKey).index, rowLookup.get(hoveredRowKey).index);\\n\\n    return columns.slice(minColumnIndex, maxColumnIndex + 1).flatMap(column => {\\n        return rows.slice(minRowIndex, maxRowIndex + 1).map(row => {\\n            return {\\n                rowId: row.id,\\n                columnId: column.id\\n            };\\n        });\\n    });\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getHighlightedCells.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getHoveredCell.js\":\n/*!*******************************************!*\\\n  !*** ./src/state-utils/getHoveredCell.js ***!\n  \\*******************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getHoveredCell)\\n/* harmony export */ });\\n/* harmony import */ var _getColumnIndex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getColumnIndex */ \\\"./src/state-utils/getColumnIndex.js\\\");\\n/* harmony import */ var _getRowIndex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getRowIndex */ \\\"./src/state-utils/getRowIndex.js\\\");\\n\\n\\n\\nfunction getHoveredCell(element, mousePosition, rows, columns, fixedSize, totalSize) {\\n    if (!mousePosition)\\n        return null;\\n    if (mousePosition.x < 0 || mousePosition.y < 0 || mousePosition.x > totalSize.width || mousePosition.y > totalSize.height)\\n        return null;\\n\\n    const scrollOffset = {\\n        left: element.scrollLeft,\\n        top: element.scrollTop\\n    };\\n\\n    const clientSize = {\\n        width: element.clientWidth,\\n        height: element.clientHeight\\n    };\\n\\n    const x = mousePosition.x <= fixedSize.left\\n        ? mousePosition.x\\n        : mousePosition.x >= clientSize.width - fixedSize.right\\n            ? totalSize.width - clientSize.width + mousePosition.x\\n            : mousePosition.x + scrollOffset.left;\\n    const y = mousePosition.y <= fixedSize.top\\n        ? mousePosition.y\\n        : mousePosition.y >= clientSize.height - fixedSize.bottom\\n            ? totalSize.height - clientSize.height + mousePosition.y\\n            : mousePosition.y + scrollOffset.top;\\n\\n    const hoverRowIndex = (0,_getRowIndex__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(rows, y);\\n    const hoverColumnIndex = (0,_getColumnIndex__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(columns, x);\\n\\n    if (hoverRowIndex === -1 || hoverColumnIndex === -1)\\n        return null;\\n\\n    return {\\n        rowId: rows[hoverRowIndex].id,\\n        columnId: columns[hoverColumnIndex].id\\n    };\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getHoveredCell.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getInputFormattingRules.js\":\n/*!****************************************************!*\\\n  !*** ./src/state-utils/getInputFormattingRules.js ***!\n  \\****************************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getInputFormattingRules)\\n/* harmony export */ });\\nfunction getInputFormattingRules(formatting) {\\n    return formatting;\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getInputFormattingRules.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getInputPlacement.js\":\n/*!**********************************************!*\\\n  !*** ./src/state-utils/getInputPlacement.js ***!\n  \\**********************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getInputPlacement)\\n/* harmony export */ });\\n/* harmony import */ var _core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core-utils/stringifyId */ \\\"./src/core-utils/stringifyId.js\\\");\\n\\n\\nfunction getInputPlacement(editableCells, focusedCell, columnLookup, rowLookup) {\\n    if (!focusedCell)\\n        return null;\\n\\n    const focusedColumnKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(focusedCell.columnId);\\n    const focusedRowKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(focusedCell.rowId);\\n\\n    if (!columnLookup.has(focusedColumnKey))\\n        return null;\\n    if (!rowLookup.has(focusedRowKey))\\n        return null;\\n\\n    const column = columnLookup.get(focusedColumnKey);\\n    const row = rowLookup.get(focusedRowKey);\\n\\n    if (editableCells.length === 0)\\n        return null;\\n\\n    return {\\n        left: column.left,\\n        top: row.top,\\n        width: column.width,\\n        height: row.height,\\n        boxSizing: 'border-box',\\n    };\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getInputPlacement.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getIsTextValid.js\":\n/*!*******************************************!*\\\n  !*** ./src/state-utils/getIsTextValid.js ***!\n  \\*******************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getIsTextValid)\\n/* harmony export */ });\\nfunction getIsTextValid(text, editableCells) {\\n    return editableCells.every(cell => cell.edit.validate({ string: text }));\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getIsTextValid.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getLookup.js\":\n/*!**************************************!*\\\n  !*** ./src/state-utils/getLookup.js ***!\n  \\**************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getLookup)\\n/* harmony export */ });\\nfunction getLookup(elements) {\\n    return elements.reduce((lookup, element) => lookup.set(element.key, element), new Map());\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getLookup.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getPinned.js\":\n/*!**************************************!*\\\n  !*** ./src/state-utils/getPinned.js ***!\n  \\**************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getPinned)\\n/* harmony export */ });\\n// TODO: Move\\nfunction getPinned(index, length, pinnedBegin, pinnedEnd) {\\n    if (index < pinnedBegin)\\n        return \\\"BEGIN\\\";\\n    if (index >= length - pinnedEnd)\\n        return \\\"END\\\";\\n    return undefined;\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getPinned.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getPlacedColumns.js\":\n/*!*********************************************!*\\\n  !*** ./src/state-utils/getPlacedColumns.js ***!\n  \\*********************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getPlacedColumns)\\n/* harmony export */ });\\n/* harmony import */ var _core_utils_roundToPixels__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core-utils/roundToPixels */ \\\"./src/core-utils/roundToPixels.js\\\");\\n\\n\\nfunction getPlacedColumns(columns, devicePixelRatio, borderWidth) {\\n    let left = borderWidth;\\n\\n    return columns.map((column, index) => {\\n        const width = (0,_core_utils_roundToPixels__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(column.width, devicePixelRatio);\\n        const newColumn = {\\n            ...column,\\n            index: index,\\n            width: width,\\n            leftWithBorder: left - borderWidth,\\n            left: left,\\n            right: left + width,\\n            rightWithBorder: left + width + borderWidth\\n        };\\n\\n        left += newColumn.width + borderWidth;\\n\\n        return newColumn;\\n    });\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getPlacedColumns.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getPlacedRows.js\":\n/*!******************************************!*\\\n  !*** ./src/state-utils/getPlacedRows.js ***!\n  \\******************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getPlacedRows)\\n/* harmony export */ });\\n/* harmony import */ var _core_utils_roundToPixels__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core-utils/roundToPixels */ \\\"./src/core-utils/roundToPixels.js\\\");\\n\\n\\nfunction getPlacedRows(rows, devicePixelRatio, borderWidth) {\\n    let top = borderWidth;\\n\\n    return rows.map((row, index) => {\\n        const height = (0,_core_utils_roundToPixels__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(row.height, devicePixelRatio);\\n        const newRow = {\\n            ...row,\\n            index: index,\\n            height: height,\\n            topWithBorder: top - borderWidth,\\n            top: top,\\n            bottom: top + height,\\n            bottomWithBorder: top + height + borderWidth\\n        };\\n\\n        top += newRow.height + borderWidth;\\n\\n        return newRow;\\n    });\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getPlacedRows.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getReducedCells.js\":\n/*!********************************************!*\\\n  !*** ./src/state-utils/getReducedCells.js ***!\n  \\********************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getReducedCells)\\n/* harmony export */ });\\n/* harmony import */ var _types_Selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types/Selection */ \\\"./src/types/Selection.js\\\");\\n\\n\\nfunction getReducedCells(previousCells, cellsToRemove) {\\n    const selection = new _types_Selection__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](cellsToRemove);\\n    return previousCells.filter(cell => !selection.isIdSelected(cell.rowId, cell.columnId));\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getReducedCells.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getRenderFormattingRules.js\":\n/*!*****************************************************!*\\\n  !*** ./src/state-utils/getRenderFormattingRules.js ***!\n  \\*****************************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getRenderFormattingRules)\\n/* harmony export */ });\\n/* harmony import */ var _core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core-utils/stringifyId */ \\\"./src/core-utils/stringifyId.js\\\");\\n\\n\\nfunction getHighlightColor(baseColor, isStrong) {\\n    if (isStrong)\\n        return baseColor + '99';\\n    else\\n        return baseColor + '33';\\n}\\n\\nfunction getRenderFormattingRules(formatting, hoveredCell, focusedCell, selection, highlight, edition) {\\n    const hoveredColumnKey = hoveredCell ? (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(hoveredCell.columnId) : null;\\n    const hoveredRowKey = hoveredCell ? (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(hoveredCell.rowId) : null;\\n\\n    const focusedColumnKey = focusedCell ? (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(focusedCell.columnId) : null;\\n    const focusedRowKey = focusedCell ? (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(focusedCell.rowId) : null;\\n\\n    const isSelected = (rows, columns, rowIndex, columnIndex) => {\\n        if (rowIndex < 0 || rowIndex >= rows.length)\\n            return false;\\n        if (columnIndex < 0 || columnIndex >= columns.length)\\n            return false;\\n\\n        const rowKey = rows[rowIndex].key;\\n        const columnKey = columns[columnIndex].key;\\n\\n        return selection.isKeySelected(rowKey, columnKey);\\n    };\\n\\n    return [\\n        {\\n            column: { match: 'ANY' },\\n            row: { match: 'FILTER' },\\n            style: ({ newValue }) => ({ background: '#FBFBFB', foreground: newValue ? 'black' : '#cccccc', border: { width: 1, color: 'gray' } })\\n        },\\n        {\\n            column: { match: 'ANY' },\\n            row: { match: 'HEADER' },\\n            style: { background: '#F5F5F5', border: { width: 1, color: 'gray' } }\\n        },\\n        ...formatting,\\n        {\\n            column: { match: 'ANY' },\\n            row: { match: 'ANY' },\\n            condition: ({ row, column }) => hoveredColumnKey === column.key || hoveredRowKey === row.key,\\n            style: { highlight: '#81948133' },\\n        },\\n        {\\n            column: { match: 'ANY' },\\n            row: { match: 'ANY' },\\n            condition: ({ row, column }) => hoveredColumnKey === column.key && hoveredRowKey === row.key,\\n            style: { highlight: '#81948188' },\\n        },\\n        {\\n            column: { match: 'ANY' },\\n            row: { match: 'ANY' },\\n            condition: ({ rows, columns, row, column }) => isSelected(rows, columns, row.index, column.index),\\n            style: ({ rows, columns, row, column, edit }) => ({\\n                ...(!isSelected(rows, columns, row.index - 1, column.index) ? { borderTop: { width: 3, color: '#596959', index: Number.MAX_SAFE_INTEGER } } : {}),\\n                ...(!isSelected(rows, columns, row.index + 1, column.index) ? { borderBottom: { width: 3, color: '#596959', index: Number.MAX_SAFE_INTEGER } } : {}),\\n                ...(!isSelected(rows, columns, row.index, column.index - 1) ? { borderLeft: { width: 3, color: '#596959', index: Number.MAX_SAFE_INTEGER } } : {}),\\n                ...(!isSelected(rows, columns, row.index, column.index + 1) ? { borderRight: { width: 3, color: '#596959', index: Number.MAX_SAFE_INTEGER } } : {}),\\n                highlight: getHighlightColor(edit ? '#798d9c' : '#819481', focusedColumnKey !== column.key || focusedRowKey !== row.key)\\n            }),\\n        },\\n        {\\n            column: { match: 'ANY' },\\n            row: { match: 'ANY' },\\n            condition: ({ row, column }) => highlight.isKeySelected(row.key, column.key),\\n            style: ({ row, column }) => ({\\n                highlight: getHighlightColor('#93a8b8', focusedColumnKey !== column.key || focusedRowKey !== row.key)\\n            })\\n        },\\n        {\\n            column: { match: 'ANY' },\\n            row: { match: 'ANY' },\\n            condition: ({ row, column }) => focusedColumnKey === column.key && focusedRowKey === row.key,\\n            style: { background: 'white' },\\n        },\\n        {\\n            column: { match: 'ANY' },\\n            row: { match: 'ANY' },\\n            condition: ({ edit }) => edit,\\n            style: { corner: '#77777720' },\\n        },\\n        {\\n            column: { match: 'ANY' },\\n            row: { match: 'ANY' },\\n            condition: ({ row, column }) => edition.hasValueByKey(row.key, column.key),\\n            style: { corner: 'darkgreen' },\\n        },\\n    ];\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getRenderFormattingRules.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getResolvedColumnsOrRows.js\":\n/*!*****************************************************!*\\\n  !*** ./src/state-utils/getResolvedColumnsOrRows.js ***!\n  \\*****************************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getResolvedColumnsOrRows)\\n/* harmony export */ });\\n/* harmony import */ var _core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core-utils/stringifyId */ \\\"./src/core-utils/stringifyId.js\\\");\\n/* harmony import */ var _getPinned__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getPinned */ \\\"./src/state-utils/getPinned.js\\\");\\n\\n\\n\\n// TODO: Move\\nfunction getResolvedColumnsOrRows(elements, pinnedBegin, pinnedEnd) {\\n    return elements.map((element, index) => {\\n        return {\\n            ...element,\\n            type: element.type || \\\"DATA\\\",\\n            index: index,\\n            key: (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(element.id),\\n            pinned: (0,_getPinned__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(index, elements.length, pinnedBegin, pinnedEnd)\\n        };\\n    });\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getResolvedColumnsOrRows.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getRowIndex.js\":\n/*!****************************************!*\\\n  !*** ./src/state-utils/getRowIndex.js ***!\n  \\****************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getRowIndex)\\n/* harmony export */ });\\nfunction getRowIndex(rows, y) {\\n    if (rows.length === 0)\\n        return -1;\\n    if (y < rows[0].topWithBorder)\\n        return -1;\\n    if (y > rows[rows.length - 1].bottomWithBorder)\\n        return -1;\\n\\n    let iterA = 0;\\n    let iterC = rows.length - 1;\\n\\n    while (iterA <= iterC) {\\n        const iterB = Math.floor((iterA + iterC) / 2);\\n\\n        if (y < rows[iterB].topWithBorder)\\n            iterC = iterB - 1;\\n        else if (y > rows[iterB].bottomWithBorder)\\n            iterA = iterB + 1;\\n\\n        else\\n            return iterB;\\n    }\\n\\n    return -1;\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getRowIndex.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getScrollRect.js\":\n/*!******************************************!*\\\n  !*** ./src/state-utils/getScrollRect.js ***!\n  \\******************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getScrollRect)\\n/* harmony export */ });\\n/* harmony import */ var _core_utils_rect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core-utils/rect */ \\\"./src/core-utils/rect.js\\\");\\n\\n\\nconst requiredMargin = 200;\\nconst preloadedMargin = 400;\\nconst emptyRect = {\\n    left: 0,\\n    top: 0,\\n    width: 0,\\n    height: 0\\n};\\n\\nfunction getScrollRect(previous, totalSize, fixedSize, element) {\\n    // TODO: Is it optimal to use getBoundingClientRect()?\\n    const size = {\\n        width: element.getBoundingClientRect().width,\\n        height: element.getBoundingClientRect().height\\n    };\\n    const scrollOffset = {\\n        left: element.scrollLeft,\\n        top: element.scrollTop\\n    };\\n\\n    const prevScrollRect = previous || emptyRect;\\n\\n    const totalRect = { left: 0, top: 0, ...totalSize };\\n    const bounds = (0,_core_utils_rect__WEBPACK_IMPORTED_MODULE_0__.subtract)(totalRect, fixedSize);\\n    const scrollRect = (0,_core_utils_rect__WEBPACK_IMPORTED_MODULE_0__.subtract)({ ...scrollOffset, ...size }, fixedSize);\\n    const requiredScrollRect = (0,_core_utils_rect__WEBPACK_IMPORTED_MODULE_0__.clip)(bounds, (0,_core_utils_rect__WEBPACK_IMPORTED_MODULE_0__.expand)(scrollRect, requiredMargin));\\n    const preloadedScrollRect = (0,_core_utils_rect__WEBPACK_IMPORTED_MODULE_0__.clip)(bounds, (0,_core_utils_rect__WEBPACK_IMPORTED_MODULE_0__.expand)(scrollRect, preloadedMargin));\\n\\n    if (!(0,_core_utils_rect__WEBPACK_IMPORTED_MODULE_0__.contains)(bounds, prevScrollRect))\\n        return preloadedScrollRect;\\n\\n    if (!(0,_core_utils_rect__WEBPACK_IMPORTED_MODULE_0__.contains)(prevScrollRect, requiredScrollRect))\\n        return preloadedScrollRect;\\n\\n    if ((0,_core_utils_rect__WEBPACK_IMPORTED_MODULE_0__.area)(prevScrollRect) > 2 * (0,_core_utils_rect__WEBPACK_IMPORTED_MODULE_0__.area)(preloadedScrollRect))\\n        return preloadedScrollRect;\\n\\n    return prevScrollRect;\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getScrollRect.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getSections.js\":\n/*!****************************************!*\\\n  !*** ./src/state-utils/getSections.js ***!\n  \\****************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getSections)\\n/* harmony export */ });\\nfunction getSections(columns, rows) {\\n    const topLength = rows.filter(row => row.pinned === 'BEGIN').length; // TODO: optimize\\n    const bottomLength = rows.filter(row => row.pinned === 'END').length;\\n    const middleLength = rows.length - topLength - bottomLength;\\n    const leftLength = columns.filter(column => column.pinned === 'BEGIN').length;\\n    const rightLength = columns.filter(column => column.pinned === 'END').length;\\n    const centerLength = columns.length - leftLength - rightLength;\\n\\n    const topRows = rows.slice(0, topLength);\\n    const bottomRows = rows.slice(rows.length - bottomLength, rows.length);\\n    const middleRows = rows.slice(topLength, rows.length - bottomLength);\\n    const leftColumns = columns.slice(0, leftLength);\\n    const rightColumns = columns.slice(columns.length - rightLength, columns.length);\\n    const centerColumns = columns.slice(leftLength, columns.length - rightLength);\\n\\n    const hasTopRows = topLength > 0;\\n    const hasBottomRows = bottomLength > 0;\\n    const hasMiddleRows = middleLength > 0;\\n    const hasLeftColumns = leftLength > 0;\\n    const hasRightColumns = rightLength > 0;\\n    const hasCenterColumns = centerLength > 0;\\n\\n    const topShowTopBorder = true;\\n    const topShowBottomBorder = true;\\n    const bottomShowTopBorder = hasMiddleRows || !hasTopRows;\\n    const bottomShowBottomBorder = true;\\n    const middleShowTopBorder = !hasTopRows;\\n    const middleShowBottomBorder = !hasBottomRows;\\n    const leftShowLeftBorder = true;\\n    const leftShowRightBorder = true;\\n    const rightShowLeftBorder = hasCenterColumns || !hasLeftColumns;\\n    const rightShowRightBorder = true;\\n    const centerShowLeftBorder = !hasLeftColumns;\\n    const centerShowRightBorder = !hasRightColumns;\\n\\n    const getHeight = (rows, showTopBorder, showBottomBorder) => {\\n        if (rows.length === 0)\\n            return 0;\\n\\n        const top = showTopBorder ? rows.at(0).topWithBorder : rows.at(0).top;\\n        const bottom = showBottomBorder ? rows.at(-1).bottomWithBorder : rows.at(-1).bottom;\\n\\n        return bottom - top;\\n    }\\n\\n    const getWidth = (columns, showLeftBorder, showRightBorder) => {\\n        if (columns.length === 0)\\n            return 0;\\n\\n        const left = showLeftBorder ? columns.at(0).leftWithBorder : columns.at(0).left;\\n        const right = showRightBorder ? columns.at(-1).rightWithBorder : columns.at(-1).right;\\n\\n        return right - left;\\n    }\\n\\n    const topHeight = getHeight(topRows, topShowTopBorder, topShowBottomBorder);\\n    const bottomHeight = getHeight(bottomRows, bottomShowTopBorder, bottomShowBottomBorder);\\n    const middleHeight = getHeight(middleRows, middleShowTopBorder, middleShowBottomBorder);\\n    const leftWidth = getWidth(leftColumns, leftShowLeftBorder, leftShowRightBorder);\\n    const rightWidth = getWidth(rightColumns, rightShowLeftBorder, rightShowRightBorder);\\n    const centerWidth = getWidth(centerColumns, centerShowLeftBorder, centerShowRightBorder);\\n\\n    return {\\n        top: {\\n            rows: topRows,\\n            showTopBorder: topShowTopBorder,\\n            showBottomBorder: topShowBottomBorder,\\n            height: topHeight\\n        },\\n        bottom: {\\n            rows: bottomRows,\\n            showTopBorder: bottomShowTopBorder,\\n            showBottomBorder: bottomShowBottomBorder,\\n            height: bottomHeight\\n        },\\n        middle: {\\n            rows: middleRows,\\n            showTopBorder: middleShowTopBorder,\\n            showBottomBorder: middleShowBottomBorder,\\n            height: middleHeight\\n        },\\n        left: {\\n            columns: leftColumns,\\n            showLeftBorder: leftShowLeftBorder,\\n            showRightBorder: leftShowRightBorder,\\n            width: leftWidth\\n        },\\n        right: {\\n            columns: rightColumns,\\n            showLeftBorder: rightShowLeftBorder,\\n            showRightBorder: rightShowRightBorder,\\n            width: rightWidth\\n        },\\n        center: {\\n            columns: centerColumns,\\n            showLeftBorder: centerShowLeftBorder,\\n            showRightBorder: centerShowRightBorder,\\n            width: centerWidth\\n        }\\n    };\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getSections.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getSelection.js\":\n/*!*****************************************!*\\\n  !*** ./src/state-utils/getSelection.js ***!\n  \\*****************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getSelection)\\n/* harmony export */ });\\n/* harmony import */ var _types_Selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types/Selection */ \\\"./src/types/Selection.js\\\");\\n\\n\\nfunction getSelection(selectedCells) {\\n    return new _types_Selection__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](selectedCells);\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getSelection.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getTextResolver.js\":\n/*!********************************************!*\\\n  !*** ./src/state-utils/getTextResolver.js ***!\n  \\********************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getTextResolver)\\n/* harmony export */ });\\n/* harmony import */ var _types_TextResolver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types/TextResolver */ \\\"./src/types/TextResolver.js\\\");\\n\\n\\nfunction getTextResolver() {\\n    return new _types_TextResolver__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]();\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getTextResolver.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getTotalSize.js\":\n/*!*****************************************!*\\\n  !*** ./src/state-utils/getTotalSize.js ***!\n  \\*****************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getTotalSize)\\n/* harmony export */ });\\nfunction getTotalSize(columns, rows) {\\n    return {\\n        width: columns.length ? columns.at(-1).rightWithBorder : 0,\\n        height: rows.length ? rows.at(-1).bottomWithBorder : 0\\n    };\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getTotalSize.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getVisibilityFormattingRules.js\":\n/*!*********************************************************!*\\\n  !*** ./src/state-utils/getVisibilityFormattingRules.js ***!\n  \\*********************************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getVisibilityFormattingRules)\\n/* harmony export */ });\\nfunction getVisibilityFormattingRules(formatting) {\\n    return formatting; // TODO: Please note that it might need both the value and the text. Check the FormatResolver.js before implementing this\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getVisibilityFormattingRules.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getVisibilityResolver.js\":\n/*!**************************************************!*\\\n  !*** ./src/state-utils/getVisibilityResolver.js ***!\n  \\**************************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getVisibilityResolver)\\n/* harmony export */ });\\n/* harmony import */ var _types_VisibilityResolver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types/VisibilityResolver */ \\\"./src/types/VisibilityResolver.js\\\");\\n\\n\\nfunction getVisibilityResolver(formattingRules, data, rows, columns, filters) {\\n    return new _types_VisibilityResolver__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"](formattingRules, data, rows, columns, filters);\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getVisibilityResolver.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getVisibleColumns.js\":\n/*!**********************************************!*\\\n  !*** ./src/state-utils/getVisibleColumns.js ***!\n  \\**********************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getVisibleColumns)\\n/* harmony export */ });\\nfunction getVisibleColumns(visibilityResolver) {\\n    return visibilityResolver.findVisibleColumns();\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getVisibleColumns.js?\");\n\n/***/ }),\n\n/***/ \"./src/state-utils/getVisibleRows.js\":\n/*!*******************************************!*\\\n  !*** ./src/state-utils/getVisibleRows.js ***!\n  \\*******************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ getVisibleRows)\\n/* harmony export */ });\\nfunction getVisibleRows(visibilityResolver) {\\n    return visibilityResolver.findVisibleRows();\\n}\\n\\n\\n//# sourceURL=webpack://js-spread-grid/./src/state-utils/getVisibleRows.js?\");\n\n/***/ }),\n\n/***/ \"./src/types/Edition.js\":\n/*!******************************!*\\\n  !*** ./src/types/Edition.js ***!\n  \\******************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ Edition)\\n/* harmony export */ });\\n/* harmony import */ var _core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core-utils/stringifyId */ \\\"./src/core-utils/stringifyId.js\\\");\\n\\n\\n// TODO: write unit tests\\nclass Edition {\\n    constructor(editedCells) {\\n        this.lookup = new Map();\\n\\n        editedCells.forEach(cell => {\\n            const rowKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(cell.rowId);\\n            const columnKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(cell.columnId);\\n\\n            if (!this.lookup.has(rowKey))\\n                this.lookup.set(rowKey, new Map());\\n\\n            this.lookup.get(rowKey).set(columnKey, cell.value);\\n        });\\n    }\\n\\n    hasValueByKey(rowKey, columnKey) {\\n        return this.lookup.has(rowKey) && this.lookup.get(rowKey).has(columnKey);\\n    }\\n\\n    getValueByKey(rowKey, columnKey) {\\n        if (!this.hasValueByKey(rowKey, columnKey))\\n            return undefined;\\n\\n        return this.lookup.get(rowKey).get(columnKey);\\n    }\\n\\n    hasValueById(rowId, columnId) {\\n        return this.hasValueByKey((0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(rowId), (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(columnId));\\n    }\\n\\n    getValueById(rowId, columnId) {\\n        return this.getValueByKey((0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(rowId), (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(columnId));\\n    }\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/types/Edition.js?\");\n\n/***/ }),\n\n/***/ \"./src/types/Filtering.js\":\n/*!********************************!*\\\n  !*** ./src/types/Filtering.js ***!\n  \\********************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ Filtering)\\n/* harmony export */ });\\n/* harmony import */ var _core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core-utils/stringifyId */ \\\"./src/core-utils/stringifyId.js\\\");\\n\\n\\n// TODO: Extract the Edition class to a common base class\\nclass Filtering {\\n    constructor(filters) {\\n        this.lookup = new Map();\\n        this.filteredColumns = new Set();\\n        this.filteredRows = new Set();\\n\\n        filters.forEach(cell => {\\n            const rowKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(cell.rowId);\\n            const columnKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(cell.columnId);\\n\\n            if (!this.lookup.has(rowKey))\\n                this.lookup.set(rowKey, new Map());\\n\\n            this.lookup.get(rowKey).set(columnKey, cell.expression);\\n            this.filteredColumns.add(columnKey);\\n            this.filteredRows.add(rowKey);\\n        });\\n    }\\n\\n    hasRowFilters() {\\n        return this.filteredRows.size > 0;\\n    }\\n\\n    hasColumnFilters() {\\n        return this.filteredColumns.size > 0;\\n    }\\n\\n    hasRowFiltersByKey(rowKey) {\\n        return this.filteredRows.has(rowKey);\\n    }\\n\\n    hasColumnFiltersByKey(columnKey) {\\n        return this.filteredColumns.has(columnKey);\\n    }\\n\\n    hasValueByKey(rowKey, columnKey) {\\n        return this.lookup.has(rowKey) && this.lookup.get(rowKey).has(columnKey);\\n    }\\n\\n    getValueByKey(rowKey, columnKey) {\\n        if (!this.hasValueByKey(rowKey, columnKey))\\n            return undefined;\\n\\n        return this.lookup.get(rowKey).get(columnKey);\\n    }\\n\\n    hasValueById(rowId, columnId) {\\n        return this.hasValueByKey((0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(rowId), (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(columnId));\\n    }\\n\\n    getValueById(rowId, columnId) {\\n        return this.getValueByKey((0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(rowId), (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(columnId));\\n    }\\n\\n    hasValueByKeyAndSelector(rowKey, columnKey, selector) {\\n        if (selector.type === 'ROW')\\n            return this.hasValueByKey(selector.key, columnKey);\\n        if (selector.type === 'COLUMN')\\n            return this.hasValueByKey(rowKey, selector.key);\\n        return false;\\n    }\\n\\n    getValueByKeyAndSelector(rowKey, columnKey, selector) {\\n        if (selector.type === 'ROW')\\n            return this.getValueByKey(selector.key, columnKey);\\n        if (selector.type === 'COLUMN')\\n            return this.getValueByKey(rowKey, selector.key);\\n        return undefined;\\n    }\\n};\\n\\n//# sourceURL=webpack://js-spread-grid/./src/types/Filtering.js?\");\n\n/***/ }),\n\n/***/ \"./src/types/FormatResolver.js\":\n/*!*************************************!*\\\n  !*** ./src/types/FormatResolver.js ***!\n  \\*************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ FormatResolver)\\n/* harmony export */ });\\n/* harmony import */ var _Filtering__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Filtering */ \\\"./src/types/Filtering.js\\\");\\n\\n\\nclass FormatResolver {\\n    constructor(formattingRules, data, rows, columns, edition) {\\n        this.formattingRules = formattingRules;\\n        this.data = data;\\n        this.rows = rows;\\n        this.columns = columns;\\n        this.edition = edition;\\n        this.filtering = new _Filtering__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]([]);\\n    }\\n\\n    resolve(row, column) {\\n        return this.formattingRules.resolve(\\n            this.data,\\n            this.rows,\\n            this.columns,\\n            row,\\n            column,\\n            this.edition,\\n            this.filtering);\\n    }\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/types/FormatResolver.js?\");\n\n/***/ }),\n\n/***/ \"./src/types/FormattingRules.js\":\n/*!**************************************!*\\\n  !*** ./src/types/FormattingRules.js ***!\n  \\**************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ FormattingRules)\\n/* harmony export */ });\\n/* harmony import */ var _core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core-utils/stringifyId */ \\\"./src/core-utils/stringifyId.js\\\");\\n\\n\\nconst borderTypes = ['borderTop', 'borderRight', 'borderBottom', 'borderLeft'];\\n\\n// TODO: Don't recreate styles if they haven't changed\\nfunction indexBorders(style, index) {\\n    const newStyle = { ...style };\\n\\n    if ('border' in newStyle) {\\n        for (const borderType of borderTypes)\\n            newStyle[borderType] = newStyle.border;\\n        delete newStyle.border;\\n    }\\n\\n    for (const borderType of borderTypes)\\n        if (borderType in newStyle)\\n            newStyle[borderType] = { ...newStyle[borderType], index };\\n\\n    return newStyle;\\n}\\n\\nfunction mapFilter(filter) {\\n    return {\\n        by: {\\n            type: filter.by.type,\\n            key: (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(filter.by.id)\\n        },\\n        condition: filter.condition\\n    };\\n}\\n\\nclass StyleGroup {\\n    byKey = new Map();\\n    byIndex = new Map(); // TODO: Should this be removed?\\n    byMatch = new Map();\\n};\\n\\nconst matchMapping = {\\n    'HEADER': ['HEADER'],\\n    'FILTER': ['FILTER'],\\n    'DATA': ['DATA'],\\n    'ANY': ['HEADER', 'DATA', 'FILTER'],\\n    undefined: []\\n};\\n\\n// TODO: Rename to FormatResolver\\n// TODO: Optimize by not searching using keys that don't have correlated match rules\\n// TODO: Accept both a function and an object as a style (where the object is a resolved style)\\n// TODO: Consider removing index from the lookup\\nclass FormattingRules {\\n    constructor(rules) {\\n        this.columnLookup = new StyleGroup();\\n        this.rulesCount = 0;\\n\\n        for (const rule of rules)\\n            this.addRule(rule);\\n    }\\n\\n    addRule(rule) {\\n        const columnLookup = this.columnLookup;\\n        const index = this.rulesCount++;\\n\\n        const column = 'column' in rule\\n            ? 'id' in rule.column\\n                ? { key: (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(rule.column.id) }\\n                : rule.column\\n            : { match: 'DATA' };\\n        const row = 'row' in rule\\n            ? 'id' in rule.row\\n                ? { key: (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(rule.row.id) }\\n                : rule.row\\n            : { match: 'DATA' };\\n\\n        const entry = {};\\n        if ('condition' in rule)\\n            entry.condition = rule.condition;\\n        if ('style' in rule)\\n            entry.style = typeof rule.style === 'function' ? rule.style : () => rule.style;\\n        if ('value' in rule)\\n            entry.value = typeof rule.value === 'function' ? rule.value : () => rule.value;\\n        if ('text' in rule)\\n            entry.text = typeof rule.text === 'function' ? rule.text : () => rule.text;\\n        if ('edit' in rule)\\n            entry.edit = rule.edit;\\n        if ('draw' in rule)\\n            entry.draw = rule.draw;\\n        if ('filter' in rule)\\n            entry.filter = mapFilter(rule.filter);\\n\\n        function addRowRule(lookup, key) {\\n            if (!lookup.has(key))\\n                lookup.set(key, []);\\n\\n            lookup.get(key).push({\\n                index: index,\\n                ...entry\\n            });\\n        }\\n\\n        function addColumnRule(lookup, key) {\\n            if (!lookup.has(key))\\n                lookup.set(key, new StyleGroup());\\n\\n            if ('key' in row)\\n                addRowRule(lookup.get(key).byKey, row.key);\\n            if ('index' in row)\\n                addRowRule(lookup.get(key).byIndex, row.index);\\n            for (const match of matchMapping[row.match])\\n                addRowRule(lookup.get(key).byMatch, match);\\n        }\\n\\n        if ('key' in column)\\n            addColumnRule(columnLookup.byKey, column.key);\\n        if ('index' in column)\\n            addColumnRule(columnLookup.byIndex, column.index);\\n        for (const match of matchMapping[column.match])\\n            addColumnRule(columnLookup.byMatch, match);\\n    }\\n\\n    resolve(data, rows, columns, row, column, edition, filtering) {\\n        const columnLookup = this.columnLookup;\\n\\n        const rules = [];\\n\\n        function gatherRules(newRules) {\\n            for (const rule of newRules)\\n                rules.push(rule);\\n        }\\n\\n        function gatherRowRules(lookup) {\\n            if (lookup.byKey.has(row.key))\\n                gatherRules(lookup.byKey.get(row.key));\\n            if (lookup.byIndex.has(row.index))\\n                gatherRules(lookup.byIndex.get(row.index));\\n            if (lookup.byMatch.has(row.type))\\n                gatherRules(lookup.byMatch.get(row.type));\\n        }\\n\\n        if (columnLookup.byKey.has(column.key))\\n            gatherRowRules(columnLookup.byKey.get(column.key));\\n        if (columnLookup.byIndex.has(column.index))\\n            gatherRowRules(columnLookup.byIndex.get(column.index));\\n        if (columnLookup.byMatch.has(column.type))\\n            gatherRowRules(columnLookup.byMatch.get(column.type));\\n\\n        rules.sort((a, b) => a.index - b.index);\\n\\n        let context = { data, rows, columns, row, column };\\n        let style = {};\\n        let draw = undefined;\\n        let visible = true;\\n\\n        if (edition.hasValueByKey(row.key, column.key))\\n            context = { ...context, newValue: edition.getValueByKey(row.key, column.key) };\\n\\n        for (const rule of rules) {\\n            if ('condition' in rule && !rule.condition(context))\\n                continue;\\n\\n            if ('value' in rule)\\n                context = { ...context, value: rule.value(context) };\\n            if ('style' in rule)\\n                style = { ...style, ...indexBorders(rule.style(context), rule.index) };\\n            if ('text' in rule)\\n                context = { ...context, text: rule.text(context) };\\n            if ('edit' in rule)\\n                context = { ...context, edit: rule.edit };\\n            if ('draw' in rule) {\\n                const currentContext = context;\\n                draw = (ctx) => rule.draw({ ...currentContext, ctx });\\n            }\\n            if ('filter' in rule && filtering.hasValueByKeyAndSelector(row.key, column.key, rule.filter.by)) {\\n                const filterContext = { ...context, expression: filtering.getValueByKeyAndSelector(row.key, column.key, rule.filter.by) };\\n                visible = visible && rule.filter.condition(filterContext);\\n            }\\n\\n            // TODO: Add StopPropagation\\n        }\\n\\n        const result = {\\n            style,\\n            visible\\n        };\\n\\n        if ('value' in context)\\n            result.value = context.value;\\n        if ('edit' in context)\\n            result.edit = context.edit;\\n        if (draw !== undefined)\\n            result.draw = draw;\\n        if ('text' in context)\\n            result.text = context.text;\\n\\n        return result;\\n    }\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/types/FormattingRules.js?\");\n\n/***/ }),\n\n/***/ \"./src/types/Selection.js\":\n/*!********************************!*\\\n  !*** ./src/types/Selection.js ***!\n  \\********************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ Selection)\\n/* harmony export */ });\\n/* harmony import */ var _core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core-utils/stringifyId */ \\\"./src/core-utils/stringifyId.js\\\");\\n\\n\\nclass Selection {\\n    constructor(selectedCells) {\\n        this.lookup = new Map();\\n\\n        selectedCells.forEach(cell => {\\n            const rowKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(cell.rowId);\\n            const columnKey = (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(cell.columnId);\\n\\n            if (!this.lookup.has(rowKey))\\n                this.lookup.set(rowKey, new Set());\\n\\n            this.lookup.get(rowKey).add(columnKey);\\n        });\\n    }\\n\\n    isKeySelected(rowKey, columnKey) {\\n        return this.lookup.has(rowKey) && this.lookup.get(rowKey).has(columnKey);\\n    }\\n\\n    isIdSelected(rowId, columnId) {\\n        return this.isKeySelected((0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(rowId), (0,_core_utils_stringifyId__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(columnId));\\n    }\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/types/Selection.js?\");\n\n/***/ }),\n\n/***/ \"./src/types/TextResolver.js\":\n/*!***********************************!*\\\n  !*** ./src/types/TextResolver.js ***!\n  \\***********************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ TextResolver)\\n/* harmony export */ });\\nclass TextResolver\\n{\\n    constructor() {\\n        this.canvas = document.createElement('canvas');\\n        this.context = this.canvas.getContext('2d');\\n        this.fontMetrics = new Map();\\n    }\\n\\n    getFontMetrics(font) {\\n        const key = font;\\n\\n        if (this.fontMetrics.has(key))\\n            return this.fontMetrics.get(key);\\n\\n        const ctx = this.context;\\n\\n        // TODO: Set other font properties\\n        ctx.font = font;\\n\\n        const textMetrics = ctx.measureText('X');\\n\\n        const middle = (textMetrics.actualBoundingBoxDescent - textMetrics.actualBoundingBoxAscent) / 2;\\n        const topOffset = middle + textMetrics.fontBoundingBoxAscent;\\n        const bottomOffset = textMetrics.fontBoundingBoxDescent - middle;\\n\\n        const fontMetrics = {\\n            topOffset: topOffset,\\n            middle: -middle,\\n            bottomOffset: bottomOffset\\n        };\\n\\n        this.fontMetrics.set(key, fontMetrics);\\n\\n        return fontMetrics;\\n    }\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/types/TextResolver.js?\");\n\n/***/ }),\n\n/***/ \"./src/types/VisibilityResolver.js\":\n/*!*****************************************!*\\\n  !*** ./src/types/VisibilityResolver.js ***!\n  \\*****************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ VisibilityResolver)\\n/* harmony export */ });\\n/* harmony import */ var _Edition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Edition */ \\\"./src/types/Edition.js\\\");\\n\\n\\nclass VisibilityResolver {\\n    constructor(formattingRules, data, rows, columns, filtering) {\\n        this.formattingRules = formattingRules;\\n        this.data = data;\\n        this.rows = rows;\\n        this.columns = columns;\\n        this.edition = new _Edition__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]([]);\\n        this.filtering = filtering;\\n    }\\n\\n    findVisibleColumns() {\\n        if (!this.filtering.hasRowFilters())\\n            return this.columns;\\n\\n        return this.columns.filter(column => {\\n            return this.rows.every(row => {\\n                if (!this.filtering.hasRowFiltersByKey(row.key))\\n                    return true;\\n\\n                const cell = this.formattingRules.resolve(\\n                    this.data,\\n                    this.rows,\\n                    this.columns,\\n                    row,\\n                    column,\\n                    this.edition,\\n                    this.filtering);\\n\\n                return cell.visible;\\n            });\\n        });\\n    }\\n\\n    findVisibleRows() {\\n        // TODO: don't include search columns in that check\\n        if (!this.filtering.hasColumnFilters())\\n            return this.rows;\\n\\n        return this.rows.filter(row => {\\n            return this.columns.every(column => {\\n                if (!this.filtering.hasColumnFiltersByKey(column.key))\\n                    return true;\\n\\n                const cell = this.formattingRules.resolve(\\n                    this.data,\\n                    this.rows,\\n                    this.columns,\\n                    row,\\n                    column,\\n                    this.edition,\\n                    this.filtering);\\n\\n                return cell.visible;\\n            });\\n        });\\n    }\\n}\\n\\n//# sourceURL=webpack://js-spread-grid/./src/types/VisibilityResolver.js?\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_117527__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_117527__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_117527__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_117527__.o(definition, key) && !__nested_webpack_require_117527__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_117527__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_117527__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module can't be inlined because the eval devtool is used.\n/******/ \tvar __webpack_exports__ = __nested_webpack_require_117527__(\"./src/index.js\");\n/******/ \t\n/******/ })()\n;\n\n//# sourceURL=webpack://react-spread-grid/../lib/dist/main.js?");

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var ReactVersion = '18.2.0';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: null\n};\n\nvar ReactCurrentActQueue = {\n  current: null,\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: false,\n  didScheduleLegacyUpdate: false\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = {};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar assign = Object.assign;\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n  }\n\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    {\n      checkKeyStringCoercion(element.key);\n    }\n\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      var childrenString = String(children);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    throw new Error('React.Children.only expected to receive a single React element child.');\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue) {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: null,\n    _globalName: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = moduleObject;\n      }\n    }, function (error) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      var pending = payload;\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n\n  if (payload._status === Resolved) {\n    var moduleObject = payload._result;\n\n    {\n      if (moduleObject === undefined) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n      }\n    }\n\n    {\n      if (!('default' in moduleObject)) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n      }\n    }\n\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  {\n    if (dispatcher === null) {\n      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n    }\n  } // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n\n\n  return dispatcher;\n}\nfunction useContext(Context) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    // TODO: add a more generic warning for invalid values.\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useInsertionEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\nfunction useTransition() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\nfunction useDeferredValue(value) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\nfunction useId() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nfunction startTransition(scope, options) {\n  var prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  var currentTransition = ReactCurrentBatchConfig.transition;\n\n  {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nvar didWarnAboutMessageChannel = false;\nvar enqueueTaskImpl = null;\nfunction enqueueTask(task) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      var requireString = ('require' + Math.random()).slice(0, 7);\n      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function (callback) {\n        {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n\n            if (typeof MessageChannel === 'undefined') {\n              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n            }\n          }\n        }\n\n        var channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n\n  return enqueueTaskImpl(task);\n}\n\nvar actScopeDepth = 0;\nvar didWarnNoAwaitAct = false;\nfunction act(callback) {\n  {\n    // `act` calls can be nested, so we track the depth. This represents the\n    // number of `act` scopes on the stack.\n    var prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n\n    if (ReactCurrentActQueue.current === null) {\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\n      // will detect the queue and use it instead of Scheduler.\n      ReactCurrentActQueue.current = [];\n    }\n\n    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    var result;\n\n    try {\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n      // set to `true` while the given callback is executed, not for updates\n      // triggered during an async event, because this is how the legacy\n      // implementation of `act` behaved.\n      ReactCurrentActQueue.isBatchingLegacy = true;\n      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n\n      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n        var queue = ReactCurrentActQueue.current;\n\n        if (queue !== null) {\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          flushActQueue(queue);\n        }\n      }\n    } catch (error) {\n      popActScope(prevActScopeDepth);\n      throw error;\n    } finally {\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    }\n\n    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n      // for it to resolve before exiting the current scope.\n\n      var wasAwaited = false;\n      var thenable = {\n        then: function (resolve, reject) {\n          wasAwaited = true;\n          thenableResult.then(function (returnValue) {\n            popActScope(prevActScopeDepth);\n\n            if (actScopeDepth === 0) {\n              // We've exited the outermost act scope. Recursively flush the\n              // queue until there's no remaining work.\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }, function (error) {\n            // The callback threw an error.\n            popActScope(prevActScopeDepth);\n            reject(error);\n          });\n        }\n      };\n\n      {\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n          // eslint-disable-next-line no-undef\n          Promise.resolve().then(function () {}).then(function () {\n            if (!wasAwaited) {\n              didWarnNoAwaitAct = true;\n\n              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n            }\n          });\n        }\n      }\n\n      return thenable;\n    } else {\n      var returnValue = result; // The callback is not an async function. Exit the current scope\n      // immediately, without awaiting.\n\n      popActScope(prevActScopeDepth);\n\n      if (actScopeDepth === 0) {\n        // Exiting the outermost act scope. Flush the queue.\n        var _queue = ReactCurrentActQueue.current;\n\n        if (_queue !== null) {\n          flushActQueue(_queue);\n          ReactCurrentActQueue.current = null;\n        } // Return a thenable. If the user awaits it, we'll flush again in\n        // case additional work was scheduled by a microtask.\n\n\n        var _thenable = {\n          then: function (resolve, reject) {\n            // Confirm we haven't re-entered another `act` scope, in case\n            // the user does something weird like await the thenable\n            // multiple times.\n            if (ReactCurrentActQueue.current === null) {\n              // Recursively flush the queue until there's no remaining work.\n              ReactCurrentActQueue.current = [];\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }\n        };\n        return _thenable;\n      } else {\n        // Since we're inside a nested `act` scope, the returned thenable\n        // immediately resolves. The outer scope will flush the queue.\n        var _thenable2 = {\n          then: function (resolve, reject) {\n            resolve(returnValue);\n          }\n        };\n        return _thenable2;\n      }\n    }\n  }\n}\n\nfunction popActScope(prevActScopeDepth) {\n  {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n    }\n\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n  {\n    var queue = ReactCurrentActQueue.current;\n\n    if (queue !== null) {\n      try {\n        flushActQueue(queue);\n        enqueueTask(function () {\n          if (queue.length === 0) {\n            // No additional work was scheduled. Finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          } else {\n            // Keep flushing work until there's none left.\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          }\n        });\n      } catch (error) {\n        reject(error);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nvar isFlushing = false;\n\nfunction flushActQueue(queue) {\n  {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      var i = 0;\n\n      try {\n        for (; i < queue.length; i++) {\n          var callback = queue[i];\n\n          do {\n            callback = callback(true);\n          } while (callback !== null);\n        }\n\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue = queue.slice(i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.startTransition = startTransition;\nexports.unstable_act = act;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useDeferredValue = useDeferredValue;\nexports.useEffect = useEffect;\nexports.useId = useId;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useInsertionEffect = useInsertionEffect;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.useSyncExternalStore = useSyncExternalStore;\nexports.useTransition = useTransition;\nexports.version = ReactVersion;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n\n\n//# sourceURL=webpack://react-spread-grid/./node_modules/react/cjs/react.development.js?");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"./node_modules/react/cjs/react.development.js\");\n}\n\n\n//# sourceURL=webpack://react-spread-grid/./node_modules/react/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SpreadGrid)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_dist_main__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/dist/main */ \"../lib/dist/main.js\");\n/* harmony import */ var _lib_dist_main__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lib_dist_main__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nfunction SpreadGrid(props) {\n    const [element, setElement] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n\n    if (element) {\n        _lib_dist_main__WEBPACK_IMPORTED_MODULE_1___default()(element, props);\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { ref: setElement });\n}\n\n//# sourceURL=webpack://react-spread-grid/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;